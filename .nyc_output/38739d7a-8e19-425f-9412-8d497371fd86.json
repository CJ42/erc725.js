{"/home/rryter/Projects/alliance-erc725.js/src/index.ts":{"path":"/home/rryter/Projects/alliance-erc725.js/src/index.ts","statementMap":{"0":{"start":{"line":16,"column":22},"end":{"line":18,"column":1}},"1":{"start":{"line":17,"column":4},"end":{"line":17,"column":62}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":62}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":24}},"4":{"start":{"line":26,"column":21},"end":{"line":26,"column":42}},"5":{"start":{"line":27,"column":34},"end":{"line":27,"column":97}},"6":{"start":{"line":28,"column":30},"end":{"line":28,"column":89}},"7":{"start":{"line":29,"column":34},"end":{"line":29,"column":97}},"8":{"start":{"line":30,"column":16},"end":{"line":30,"column":38}},"9":{"start":{"line":32,"column":0},"end":{"line":36,"column":40}},"10":{"start":{"line":33,"column":4},"end":{"line":33,"column":36}},"11":{"start":{"line":34,"column":4},"end":{"line":34,"column":42}},"12":{"start":{"line":35,"column":4},"end":{"line":35,"column":34}},"13":{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},"14":{"start":{"line":83,"column":12},"end":{"line":83,"column":47}},"15":{"start":{"line":85,"column":30},"end":{"line":87,"column":9}},"16":{"start":{"line":89,"column":8},"end":{"line":94,"column":10}},"17":{"start":{"line":96,"column":8},"end":{"line":97,"column":19}},"18":{"start":{"line":97,"column":12},"end":{"line":97,"column":19}},"19":{"start":{"line":98,"column":30},"end":{"line":98,"column":59}},"20":{"start":{"line":100,"column":8},"end":{"line":123,"column":9}},"21":{"start":{"line":101,"column":12},"end":{"line":101,"column":59}},"22":{"start":{"line":102,"column":12},"end":{"line":102,"column":89}},"23":{"start":{"line":104,"column":31},"end":{"line":104,"column":177}},"24":{"start":{"line":105,"column":12},"end":{"line":107,"column":13}},"25":{"start":{"line":106,"column":16},"end":{"line":106,"column":79}},"26":{"start":{"line":110,"column":13},"end":{"line":123,"column":9}},"27":{"start":{"line":111,"column":12},"end":{"line":111,"column":62}},"28":{"start":{"line":112,"column":12},"end":{"line":112,"column":89}},"29":{"start":{"line":115,"column":13},"end":{"line":123,"column":9}},"30":{"start":{"line":117,"column":12},"end":{"line":117,"column":58}},"31":{"start":{"line":118,"column":12},"end":{"line":118,"column":85}},"32":{"start":{"line":122,"column":12},"end":{"line":122,"column":82}},"33":{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},"34":{"start":{"line":150,"column":12},"end":{"line":150,"column":64}},"35":{"start":{"line":152,"column":8},"end":{"line":154,"column":9}},"36":{"start":{"line":153,"column":12},"end":{"line":153,"column":49}},"37":{"start":{"line":155,"column":23},"end":{"line":155,"column":74}},"38":{"start":{"line":156,"column":26},"end":{"line":156,"column":63}},"39":{"start":{"line":158,"column":24},"end":{"line":158,"column":96}},"40":{"start":{"line":160,"column":8},"end":{"line":169,"column":9}},"41":{"start":{"line":161,"column":24},"end":{"line":161,"column":64}},"42":{"start":{"line":162,"column":24},"end":{"line":162,"column":66}},"43":{"start":{"line":164,"column":12},"end":{"line":167,"column":13}},"44":{"start":{"line":165,"column":16},"end":{"line":165,"column":33}},"45":{"start":{"line":166,"column":16},"end":{"line":166,"column":57}},"46":{"start":{"line":168,"column":12},"end":{"line":168,"column":22}},"47":{"start":{"line":170,"column":8},"end":{"line":170,"column":53}},"48":{"start":{"line":201,"column":24},"end":{"line":201,"column":26}},"49":{"start":{"line":203,"column":8},"end":{"line":205,"column":9}},"50":{"start":{"line":204,"column":12},"end":{"line":204,"column":64}},"51":{"start":{"line":206,"column":8},"end":{"line":208,"column":9}},"52":{"start":{"line":207,"column":12},"end":{"line":207,"column":49}},"53":{"start":{"line":210,"column":26},"end":{"line":210,"column":63}},"54":{"start":{"line":210,"column":57},"end":{"line":210,"column":62}},"55":{"start":{"line":212,"column":25},"end":{"line":212,"column":96}},"56":{"start":{"line":214,"column":8},"end":{"line":214,"column":70}},"57":{"start":{"line":214,"column":52},"end":{"line":214,"column":68}},"58":{"start":{"line":215,"column":8},"end":{"line":232,"column":9}},"59":{"start":{"line":217,"column":12},"end":{"line":217,"column":73}},"60":{"start":{"line":221,"column":33},"end":{"line":221,"column":103}},"61":{"start":{"line":221,"column":67},"end":{"line":221,"column":102}},"62":{"start":{"line":223,"column":12},"end":{"line":227,"column":13}},"63":{"start":{"line":223,"column":29},"end":{"line":223,"column":30}},"64":{"start":{"line":224,"column":38},"end":{"line":224,"column":57}},"65":{"start":{"line":225,"column":36},"end":{"line":225,"column":89}},"66":{"start":{"line":226,"column":16},"end":{"line":226,"column":63}},"67":{"start":{"line":226,"column":43},"end":{"line":226,"column":61}},"68":{"start":{"line":228,"column":12},"end":{"line":230,"column":15}},"69":{"start":{"line":229,"column":16},"end":{"line":229,"column":45}},"70":{"start":{"line":231,"column":12},"end":{"line":231,"column":73}},"71":{"start":{"line":235,"column":8},"end":{"line":237,"column":11}},"72":{"start":{"line":236,"column":12},"end":{"line":236,"column":41}},"73":{"start":{"line":239,"column":8},"end":{"line":243,"column":9}},"74":{"start":{"line":239,"column":25},"end":{"line":239,"column":26}},"75":{"start":{"line":240,"column":24},"end":{"line":240,"column":47}},"76":{"start":{"line":241,"column":28},"end":{"line":241,"column":36}},"77":{"start":{"line":242,"column":12},"end":{"line":242,"column":35}},"78":{"start":{"line":244,"column":8},"end":{"line":244,"column":23}},"79":{"start":{"line":277,"column":23},"end":{"line":277,"column":74}},"80":{"start":{"line":278,"column":26},"end":{"line":278,"column":63}},"81":{"start":{"line":279,"column":23},"end":{"line":279,"column":60}},"82":{"start":{"line":280,"column":8},"end":{"line":281,"column":24}},"83":{"start":{"line":281,"column":12},"end":{"line":281,"column":24}},"84":{"start":{"line":283,"column":8},"end":{"line":285,"column":9}},"85":{"start":{"line":284,"column":12},"end":{"line":284,"column":88}},"86":{"start":{"line":286,"column":8},"end":{"line":310,"column":9}},"87":{"start":{"line":289,"column":46},"end":{"line":289,"column":79}},"88":{"start":{"line":291,"column":16},"end":{"line":302,"column":17}},"89":{"start":{"line":292,"column":20},"end":{"line":297,"column":23}},"90":{"start":{"line":293,"column":24},"end":{"line":295,"column":25}},"91":{"start":{"line":294,"column":28},"end":{"line":294,"column":92}},"92":{"start":{"line":294,"column":68},"end":{"line":294,"column":90}},"93":{"start":{"line":296,"column":24},"end":{"line":296,"column":40}},"94":{"start":{"line":300,"column":20},"end":{"line":300,"column":80}},"95":{"start":{"line":301,"column":20},"end":{"line":301,"column":32}},"96":{"start":{"line":303,"column":16},"end":{"line":306,"column":27}},"97":{"start":{"line":309,"column":16},"end":{"line":309,"column":30}},"98":{"start":{"line":360,"column":8},"end":{"line":360,"column":64}},"99":{"start":{"line":363,"column":23},"end":{"line":363,"column":73}},"100":{"start":{"line":364,"column":8},"end":{"line":364,"column":47}},"101":{"start":{"line":413,"column":8},"end":{"line":413,"column":64}},"102":{"start":{"line":448,"column":23},"end":{"line":448,"column":73}},"103":{"start":{"line":449,"column":8},"end":{"line":449,"column":47}},"104":{"start":{"line":475,"column":8},"end":{"line":475,"column":79}},"105":{"start":{"line":486,"column":25},"end":{"line":486,"column":70}},"106":{"start":{"line":488,"column":8},"end":{"line":493,"column":9}},"107":{"start":{"line":489,"column":12},"end":{"line":492,"column":13}},"108":{"start":{"line":494,"column":8},"end":{"line":494,"column":20}},"109":{"start":{"line":505,"column":8},"end":{"line":508,"column":9}},"110":{"start":{"line":506,"column":12},"end":{"line":507,"column":20}},"111":{"start":{"line":509,"column":24},"end":{"line":509,"column":26}},"112":{"start":{"line":511,"column":22},"end":{"line":511,"column":60}},"113":{"start":{"line":511,"column":39},"end":{"line":511,"column":59}},"114":{"start":{"line":512,"column":8},"end":{"line":514,"column":9}},"115":{"start":{"line":513,"column":12},"end":{"line":513,"column":27}},"116":{"start":{"line":515,"column":28},"end":{"line":515,"column":77}},"117":{"start":{"line":517,"column":8},"end":{"line":531,"column":9}},"118":{"start":{"line":517,"column":25},"end":{"line":517,"column":26}},"119":{"start":{"line":519,"column":36},"end":{"line":519,"column":77}},"120":{"start":{"line":522,"column":12},"end":{"line":522,"column":71}},"121":{"start":{"line":522,"column":44},"end":{"line":522,"column":69}},"122":{"start":{"line":523,"column":12},"end":{"line":530,"column":13}},"123":{"start":{"line":525,"column":16},"end":{"line":525,"column":106}},"124":{"start":{"line":526,"column":16},"end":{"line":529,"column":19}},"125":{"start":{"line":532,"column":8},"end":{"line":532,"column":23}},"126":{"start":{"line":535,"column":0},"end":{"line":535,"column":24}},"127":{"start":{"line":536,"column":0},"end":{"line":536,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":16,"column":56},"end":{"line":16,"column":57}},"loc":{"start":{"line":16,"column":71},"end":{"line":18,"column":1}},"line":16},"1":{"name":"(anonymous_1)","decl":{"start":{"line":32,"column":1},"end":{"line":32,"column":2}},"loc":{"start":{"line":32,"column":25},"end":{"line":36,"column":1}},"line":32},"2":{"name":"(anonymous_2)","decl":{"start":{"line":78,"column":4},"end":{"line":78,"column":5}},"loc":{"start":{"line":78,"column":51},"end":{"line":124,"column":5}},"line":78},"3":{"name":"(anonymous_3)","decl":{"start":{"line":148,"column":4},"end":{"line":148,"column":5}},"loc":{"start":{"line":148,"column":37},"end":{"line":171,"column":5}},"line":148},"4":{"name":"(anonymous_4)","decl":{"start":{"line":200,"column":4},"end":{"line":200,"column":5}},"loc":{"start":{"line":200,"column":23},"end":{"line":245,"column":5}},"line":200},"5":{"name":"(anonymous_5)","decl":{"start":{"line":210,"column":50},"end":{"line":210,"column":51}},"loc":{"start":{"line":210,"column":57},"end":{"line":210,"column":62}},"line":210},"6":{"name":"(anonymous_6)","decl":{"start":{"line":214,"column":45},"end":{"line":214,"column":46}},"loc":{"start":{"line":214,"column":52},"end":{"line":214,"column":68}},"line":214},"7":{"name":"(anonymous_7)","decl":{"start":{"line":221,"column":60},"end":{"line":221,"column":61}},"loc":{"start":{"line":221,"column":67},"end":{"line":221,"column":102}},"line":221},"8":{"name":"(anonymous_8)","decl":{"start":{"line":226,"column":36},"end":{"line":226,"column":37}},"loc":{"start":{"line":226,"column":43},"end":{"line":226,"column":61}},"line":226},"9":{"name":"(anonymous_9)","decl":{"start":{"line":228,"column":40},"end":{"line":228,"column":41}},"loc":{"start":{"line":228,"column":53},"end":{"line":230,"column":13}},"line":228},"10":{"name":"(anonymous_10)","decl":{"start":{"line":235,"column":36},"end":{"line":235,"column":37}},"loc":{"start":{"line":235,"column":49},"end":{"line":237,"column":9}},"line":235},"11":{"name":"(anonymous_11)","decl":{"start":{"line":276,"column":4},"end":{"line":276,"column":5}},"loc":{"start":{"line":276,"column":39},"end":{"line":311,"column":5}},"line":276},"12":{"name":"(anonymous_12)","decl":{"start":{"line":292,"column":60},"end":{"line":292,"column":61}},"loc":{"start":{"line":292,"column":67},"end":{"line":297,"column":21}},"line":292},"13":{"name":"(anonymous_13)","decl":{"start":{"line":294,"column":56},"end":{"line":294,"column":57}},"loc":{"start":{"line":294,"column":68},"end":{"line":294,"column":90}},"line":294},"14":{"name":"(anonymous_14)","decl":{"start":{"line":359,"column":4},"end":{"line":359,"column":5}},"loc":{"start":{"line":359,"column":24},"end":{"line":361,"column":5}},"line":359},"15":{"name":"(anonymous_15)","decl":{"start":{"line":362,"column":4},"end":{"line":362,"column":5}},"loc":{"start":{"line":362,"column":26},"end":{"line":365,"column":5}},"line":362},"16":{"name":"(anonymous_16)","decl":{"start":{"line":412,"column":4},"end":{"line":412,"column":5}},"loc":{"start":{"line":412,"column":24},"end":{"line":414,"column":5}},"line":412},"17":{"name":"(anonymous_17)","decl":{"start":{"line":447,"column":4},"end":{"line":447,"column":5}},"loc":{"start":{"line":447,"column":26},"end":{"line":450,"column":5}},"line":447},"18":{"name":"(anonymous_18)","decl":{"start":{"line":474,"column":4},"end":{"line":474,"column":5}},"loc":{"start":{"line":474,"column":22},"end":{"line":476,"column":5}},"line":474},"19":{"name":"(anonymous_19)","decl":{"start":{"line":485,"column":4},"end":{"line":485,"column":5}},"loc":{"start":{"line":485,"column":55},"end":{"line":495,"column":5}},"line":485},"20":{"name":"(anonymous_20)","decl":{"start":{"line":504,"column":4},"end":{"line":504,"column":5}},"loc":{"start":{"line":504,"column":40},"end":{"line":533,"column":5}},"line":504},"21":{"name":"(anonymous_21)","decl":{"start":{"line":511,"column":32},"end":{"line":511,"column":33}},"loc":{"start":{"line":511,"column":39},"end":{"line":511,"column":59}},"line":511},"22":{"name":"(anonymous_22)","decl":{"start":{"line":522,"column":37},"end":{"line":522,"column":38}},"loc":{"start":{"line":522,"column":44},"end":{"line":522,"column":69}},"line":522}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":22},"end":{"line":18,"column":1}},"type":"binary-expr","locations":[{"start":{"line":16,"column":23},"end":{"line":16,"column":27}},{"start":{"line":16,"column":31},"end":{"line":16,"column":51}},{"start":{"line":16,"column":56},"end":{"line":18,"column":1}}],"line":16},"1":{"loc":{"start":{"line":17,"column":11},"end":{"line":17,"column":61}},"type":"cond-expr","locations":[{"start":{"line":17,"column":37},"end":{"line":17,"column":40}},{"start":{"line":17,"column":43},"end":{"line":17,"column":61}}],"line":17},"2":{"loc":{"start":{"line":17,"column":12},"end":{"line":17,"column":33}},"type":"binary-expr","locations":[{"start":{"line":17,"column":12},"end":{"line":17,"column":15}},{"start":{"line":17,"column":19},"end":{"line":17,"column":33}}],"line":17},"3":{"loc":{"start":{"line":36,"column":3},"end":{"line":36,"column":38}},"type":"binary-expr","locations":[{"start":{"line":36,"column":3},"end":{"line":36,"column":15}},{"start":{"line":36,"column":20},"end":{"line":36,"column":37}}],"line":36},"4":{"loc":{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},"type":"if","locations":[{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},{"start":{"line":82,"column":8},"end":{"line":84,"column":9}}],"line":82},"5":{"loc":{"start":{"line":96,"column":8},"end":{"line":97,"column":19}},"type":"if","locations":[{"start":{"line":96,"column":8},"end":{"line":97,"column":19}},{"start":{"line":96,"column":8},"end":{"line":97,"column":19}}],"line":96},"6":{"loc":{"start":{"line":98,"column":30},"end":{"line":98,"column":59}},"type":"binary-expr","locations":[{"start":{"line":98,"column":30},"end":{"line":98,"column":47}},{"start":{"line":98,"column":51},"end":{"line":98,"column":59}}],"line":98},"7":{"loc":{"start":{"line":100,"column":8},"end":{"line":123,"column":9}},"type":"if","locations":[{"start":{"line":100,"column":8},"end":{"line":123,"column":9}},{"start":{"line":100,"column":8},"end":{"line":123,"column":9}}],"line":100},"8":{"loc":{"start":{"line":104,"column":31},"end":{"line":104,"column":177}},"type":"cond-expr","locations":[{"start":{"line":104,"column":140},"end":{"line":104,"column":146}},{"start":{"line":104,"column":149},"end":{"line":104,"column":177}}],"line":104},"9":{"loc":{"start":{"line":104,"column":31},"end":{"line":104,"column":137}},"type":"binary-expr","locations":[{"start":{"line":104,"column":31},"end":{"line":104,"column":120}},{"start":{"line":104,"column":124},"end":{"line":104,"column":137}}],"line":104},"10":{"loc":{"start":{"line":104,"column":37},"end":{"line":104,"column":110}},"type":"cond-expr","locations":[{"start":{"line":104,"column":91},"end":{"line":104,"column":97}},{"start":{"line":104,"column":100},"end":{"line":104,"column":110}}],"line":104},"11":{"loc":{"start":{"line":104,"column":37},"end":{"line":104,"column":88}},"type":"binary-expr","locations":[{"start":{"line":104,"column":37},"end":{"line":104,"column":71}},{"start":{"line":104,"column":75},"end":{"line":104,"column":88}}],"line":104},"12":{"loc":{"start":{"line":105,"column":12},"end":{"line":107,"column":13}},"type":"if","locations":[{"start":{"line":105,"column":12},"end":{"line":107,"column":13}},{"start":{"line":105,"column":12},"end":{"line":107,"column":13}}],"line":105},"13":{"loc":{"start":{"line":105,"column":16},"end":{"line":105,"column":38}},"type":"binary-expr","locations":[{"start":{"line":105,"column":16},"end":{"line":105,"column":27}},{"start":{"line":105,"column":31},"end":{"line":105,"column":38}}],"line":105},"14":{"loc":{"start":{"line":110,"column":13},"end":{"line":123,"column":9}},"type":"if","locations":[{"start":{"line":110,"column":13},"end":{"line":123,"column":9}},{"start":{"line":110,"column":13},"end":{"line":123,"column":9}}],"line":110},"15":{"loc":{"start":{"line":110,"column":17},"end":{"line":110,"column":73}},"type":"binary-expr","locations":[{"start":{"line":110,"column":17},"end":{"line":110,"column":33}},{"start":{"line":110,"column":37},"end":{"line":110,"column":73}}],"line":110},"16":{"loc":{"start":{"line":115,"column":13},"end":{"line":123,"column":9}},"type":"if","locations":[{"start":{"line":115,"column":13},"end":{"line":123,"column":9}},{"start":{"line":115,"column":13},"end":{"line":123,"column":9}}],"line":115},"17":{"loc":{"start":{"line":115,"column":17},"end":{"line":116,"column":44}},"type":"binary-expr","locations":[{"start":{"line":115,"column":18},"end":{"line":115,"column":35}},{"start":{"line":115,"column":39},"end":{"line":115,"column":52}},{"start":{"line":116,"column":12},"end":{"line":116,"column":44}}],"line":115},"18":{"loc":{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},"type":"if","locations":[{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},{"start":{"line":149,"column":8},"end":{"line":151,"column":9}}],"line":149},"19":{"loc":{"start":{"line":152,"column":8},"end":{"line":154,"column":9}},"type":"if","locations":[{"start":{"line":152,"column":8},"end":{"line":154,"column":9}},{"start":{"line":152,"column":8},"end":{"line":154,"column":9}}],"line":152},"20":{"loc":{"start":{"line":155,"column":23},"end":{"line":155,"column":74}},"type":"cond-expr","locations":[{"start":{"line":155,"column":38},"end":{"line":155,"column":52}},{"start":{"line":155,"column":55},"end":{"line":155,"column":74}}],"line":155},"21":{"loc":{"start":{"line":160,"column":8},"end":{"line":169,"column":9}},"type":"if","locations":[{"start":{"line":160,"column":8},"end":{"line":169,"column":9}},{"start":{"line":160,"column":8},"end":{"line":169,"column":9}}],"line":160},"22":{"loc":{"start":{"line":164,"column":12},"end":{"line":167,"column":13}},"type":"if","locations":[{"start":{"line":164,"column":12},"end":{"line":167,"column":13}},{"start":{"line":164,"column":12},"end":{"line":167,"column":13}}],"line":164},"23":{"loc":{"start":{"line":164,"column":16},"end":{"line":164,"column":37}},"type":"binary-expr","locations":[{"start":{"line":164,"column":16},"end":{"line":164,"column":19}},{"start":{"line":164,"column":23},"end":{"line":164,"column":37}}],"line":164},"24":{"loc":{"start":{"line":203,"column":8},"end":{"line":205,"column":9}},"type":"if","locations":[{"start":{"line":203,"column":8},"end":{"line":205,"column":9}},{"start":{"line":203,"column":8},"end":{"line":205,"column":9}}],"line":203},"25":{"loc":{"start":{"line":206,"column":8},"end":{"line":208,"column":9}},"type":"if","locations":[{"start":{"line":206,"column":8},"end":{"line":208,"column":9}},{"start":{"line":206,"column":8},"end":{"line":208,"column":9}}],"line":206},"26":{"loc":{"start":{"line":215,"column":8},"end":{"line":232,"column":9}},"type":"if","locations":[{"start":{"line":215,"column":8},"end":{"line":232,"column":9}},{"start":{"line":215,"column":8},"end":{"line":232,"column":9}}],"line":215},"27":{"loc":{"start":{"line":277,"column":23},"end":{"line":277,"column":74}},"type":"cond-expr","locations":[{"start":{"line":277,"column":38},"end":{"line":277,"column":52}},{"start":{"line":277,"column":55},"end":{"line":277,"column":74}}],"line":277},"28":{"loc":{"start":{"line":280,"column":8},"end":{"line":281,"column":24}},"type":"if","locations":[{"start":{"line":280,"column":8},"end":{"line":281,"column":24}},{"start":{"line":280,"column":8},"end":{"line":281,"column":24}}],"line":280},"29":{"loc":{"start":{"line":283,"column":8},"end":{"line":285,"column":9}},"type":"if","locations":[{"start":{"line":283,"column":8},"end":{"line":285,"column":9}},{"start":{"line":283,"column":8},"end":{"line":285,"column":9}}],"line":283},"30":{"loc":{"start":{"line":283,"column":12},"end":{"line":283,"column":72}},"type":"binary-expr","locations":[{"start":{"line":283,"column":12},"end":{"line":283,"column":18}},{"start":{"line":283,"column":22},"end":{"line":283,"column":32}},{"start":{"line":283,"column":36},"end":{"line":283,"column":72}}],"line":283},"31":{"loc":{"start":{"line":286,"column":8},"end":{"line":310,"column":9}},"type":"switch","locations":[{"start":{"line":287,"column":12},"end":{"line":287,"column":27}},{"start":{"line":288,"column":12},"end":{"line":307,"column":13}},{"start":{"line":308,"column":12},"end":{"line":309,"column":30}}],"line":286},"32":{"loc":{"start":{"line":293,"column":24},"end":{"line":295,"column":25}},"type":"if","locations":[{"start":{"line":293,"column":24},"end":{"line":295,"column":25}},{"start":{"line":293,"column":24},"end":{"line":295,"column":25}}],"line":293},"33":{"loc":{"start":{"line":303,"column":23},"end":{"line":306,"column":26}},"type":"cond-expr","locations":[{"start":{"line":305,"column":22},"end":{"line":305,"column":30}},{"start":{"line":306,"column":22},"end":{"line":306,"column":26}}],"line":303},"34":{"loc":{"start":{"line":303,"column":23},"end":{"line":304,"column":86}},"type":"binary-expr","locations":[{"start":{"line":303,"column":23},"end":{"line":303,"column":31}},{"start":{"line":304,"column":20},"end":{"line":304,"column":86}}],"line":303},"35":{"loc":{"start":{"line":475,"column":46},"end":{"line":475,"column":77}},"type":"binary-expr","locations":[{"start":{"line":475,"column":46},"end":{"line":475,"column":53}},{"start":{"line":475,"column":57},"end":{"line":475,"column":77}}],"line":475},"36":{"loc":{"start":{"line":488,"column":8},"end":{"line":493,"column":9}},"type":"if","locations":[{"start":{"line":488,"column":8},"end":{"line":493,"column":9}},{"start":{"line":488,"column":8},"end":{"line":493,"column":9}}],"line":488},"37":{"loc":{"start":{"line":505,"column":8},"end":{"line":508,"column":9}},"type":"if","locations":[{"start":{"line":505,"column":8},"end":{"line":508,"column":9}},{"start":{"line":505,"column":8},"end":{"line":508,"column":9}}],"line":505},"38":{"loc":{"start":{"line":512,"column":8},"end":{"line":514,"column":9}},"type":"if","locations":[{"start":{"line":512,"column":8},"end":{"line":514,"column":9}},{"start":{"line":512,"column":8},"end":{"line":514,"column":9}}],"line":512},"39":{"loc":{"start":{"line":512,"column":12},"end":{"line":512,"column":34}},"type":"binary-expr","locations":[{"start":{"line":512,"column":12},"end":{"line":512,"column":18}},{"start":{"line":512,"column":22},"end":{"line":512,"column":34}}],"line":512},"40":{"loc":{"start":{"line":523,"column":12},"end":{"line":530,"column":13}},"type":"if","locations":[{"start":{"line":523,"column":12},"end":{"line":530,"column":13}},{"start":{"line":523,"column":12},"end":{"line":530,"column":13}}],"line":523}},"s":{"0":1,"1":3,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":118,"14":0,"15":118,"16":118,"17":118,"18":46,"19":72,"20":72,"21":23,"22":23,"23":23,"24":23,"25":23,"26":49,"27":1,"28":1,"29":48,"30":48,"31":48,"32":0,"33":69,"34":0,"35":69,"36":0,"37":69,"38":69,"39":69,"40":69,"41":9,"42":9,"43":9,"44":9,"45":9,"46":0,"47":60,"48":3,"49":3,"50":0,"51":3,"52":0,"53":3,"54":66,"55":3,"56":3,"57":72,"58":3,"59":1,"60":2,"61":44,"62":2,"63":2,"64":6,"65":6,"66":6,"67":12,"68":2,"69":44,"70":2,"71":3,"72":66,"73":3,"74":3,"75":66,"76":66,"77":66,"78":3,"79":3,"80":3,"81":3,"82":3,"83":0,"84":3,"85":3,"86":3,"87":3,"88":3,"89":3,"90":3,"91":1,"92":1,"93":2,"94":0,"95":0,"96":3,"97":0,"98":1,"99":22,"100":22,"101":1,"102":22,"103":22,"104":0,"105":3,"106":3,"107":0,"108":3,"109":15,"110":0,"111":15,"112":15,"113":69,"114":15,"115":0,"116":15,"117":15,"118":15,"119":30,"120":30,"121":306,"122":30,"123":30,"124":30,"125":15,"126":1,"127":1},"f":{"0":3,"1":1,"2":118,"3":69,"4":3,"5":66,"6":72,"7":44,"8":12,"9":44,"10":66,"11":3,"12":3,"13":1,"14":1,"15":22,"16":1,"17":22,"18":0,"19":3,"20":15,"21":69,"22":306},"b":{"0":[1,1,1],"1":[3,0],"2":[3,3],"3":[1,1],"4":[0,118],"5":[46,72],"6":[72,49],"7":[23,49],"8":[23,0],"9":[23,23],"10":[23,0],"11":[23,23],"12":[23,0],"13":[23,23],"14":[1,48],"15":[49,48],"16":[48,0],"17":[48,48,0],"18":[0,69],"19":[0,69],"20":[0,69],"21":[9,60],"22":[9,0],"23":[9,9],"24":[0,3],"25":[0,3],"26":[1,2],"27":[0,3],"28":[0,3],"29":[3,0],"30":[3,3,3],"31":[2,3,0],"32":[1,2],"33":[3,0],"34":[3,3],"35":[0,0],"36":[0,3],"37":[0,15],"38":[0,15],"39":[15,15],"40":[30,0]},"inputSourceMap":{"version":3,"file":"/home/rryter/Projects/alliance-erc725.js/src/index.ts","sources":["/home/rryter/Projects/alliance-erc725.js/src/index.ts"],"names":[],"mappings":";AAAA,gDAAgD;AAChD;;;;;;;;;;;;EAYE;;;;;;AAEF;;;;GAIG;AAEH,2CAA0D;AAE1D,kGAA8D;AAC9D,0FAAyD;AACzD,kGAAiE;AACjE,uCASqB;AAWrB,IAAK,YAIJ;AAJD,WAAK,YAAY;IACf,+BAAe,CAAA;IACf,qCAAqB,CAAA;IACrB,6BAAa,CAAA;AACf,CAAC,EAJI,YAAY,KAAZ,YAAY,QAIhB;AASD;;;;;GAKG;AACH,MAAa,MAAM;IASjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAiCG;IACH,YACE,MAAsB,EACtB,OAAgB,EAChB,QAAc,EACd,MAAqB;QAErB,+FAA+F;;QAE/F,qCAAqC;QACrC,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;SACpC;QAED,MAAM,aAAa,GAAG;YACpB,WAAW,EAAE,mCAAmC;SACjD,CAAC;QAEF,sBAAsB;QACtB,IAAI,CAAC,OAAO,GAAG;YACb,MAAM;YACN,OAAO;YACP,YAAY,EAAE,IAAI;YAClB,MAAM,kCACD,aAAa,GACb,MAAM,CACV;SACF,CAAC;QAEF,6BAA6B;QAC7B,IAAI,CAAC,QAAQ;YAAE,OAAO;QAEtB,MAAM,aAAa,GAAG,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC;QAEpD,yBAAyB;QAEzB,IAAI,QAAQ,CAAC,IAAI,KAAK,cAAc,EAAE;YACpC,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,YAAY,CAAC,KAAK,CAAC;YAC/C,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,iCAAW,CAAC,aAAa,CAAC,CAAC;YAEvD,oGAAoG;YACpG,MAAM,UAAU,GAAG,MAAA,MAAA,aAAa,CAAC,IAAI,0CAAE,OAAO,0CAAE,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;YAC1E,IAAI,CAAC,UAAU,IAAI,OAAO,EAAE;gBAC1B,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,8BAAiB,CAAC,OAAO,CAAC,CAAC;aACnD;YAED,0BAA0B;SAC3B;aAAM,IAAI,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,IAAI,KAAK,kBAAkB,EAAE;YACnE,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,YAAY,CAAC,QAAQ,CAAC;YAClD,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,iCAAc,CAAC,aAAa,CAAC,CAAC;YAE1D,6CAA6C;SAC9C;aAAM,IACL,CAAC,CAAC,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC;YACpC,QAAQ,CAAC,IAAI,KAAK,cAAc,EAChC;YACA,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,YAAY,CAAC,IAAI,CAAC;YAC9C,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,6BAAU,CAAC,aAAa,CAAC,CAAC;YAEtD,yBAAyB;SAC1B;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,qCAAqC,aAAa,EAAE,CAAC,CAAC;SACvE;IACH,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;OAsBG;IACH,KAAK,CAAC,OAAO,CAAC,GAAW,EAAE,YAA2B;QACpD,IAAI,CAAC,sBAAS,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACpC,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;SACrD;QACD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;YAC1B,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;SACtC;QAED,MAAM,MAAM,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACnE,MAAM,SAAS,GAAG,wBAAgB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAEhD,iCAAiC;QACjC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CACjD,IAAI,CAAC,OAAO,CAAC,OAAO,EACpB,SAAS,CAAC,GAAG,CACd,CAAC;QACF,6BAA6B;QAE7B,IAAI,SAAS,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,OAAO,EAAE;YAC/C,MAAM,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;YACrD,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;YAEvD,sBAAsB;YACtB,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;gBACzB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,gCAAgC;gBAClD,OAAO,iBAAS,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;aAClC;YAED,OAAO,EAAE,CAAC,CAAC,mCAAmC;SAC/C;QAED,OAAO,iBAAS,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IACvC,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;;;;;;OA2BG;IACH,KAAK,CAAC,UAAU;QACd,MAAM,OAAO,GAAG,EAAE,CAAC;QACnB,IAAI,GAAG,CAAC;QACR,IAAI,CAAC,sBAAS,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACpC,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;SACrD;QACD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;YAC1B,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;SACtC;QAED,yCAAyC;QACzC,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACxD,oEAAoE;QACpE,IAAI,UAAU,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CACrD,IAAI,CAAC,OAAO,CAAC,OAAO,EACpB,SAAS,CACV,CAAC;QAEF,sEAAsE;QACtE,UAAU,GAAG,MAAM,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC;QAE9D,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,KAAK,YAAY,CAAC,KAAK,EAAE;YACpD,iGAAiG;YACjG,GAAG,GAAG,qBAAa,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SACtD;aAAM;YACL,uGAAuG;YACvG,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAC7C,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,OAAO,CAC3C,CAAC;YAEF,0DAA0D;YAC1D,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;gBACxD,MAAM,aAAa,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;gBAC1C,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,eAAe,CAC5C,aAAa,EACb,UAAU,CACX,CAAC;gBACF,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aAChD;YAED,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;gBACtC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;YAC/B,CAAC,CAAC,CAAC;YACH,GAAG,GAAG,qBAAa,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SACtD;QAED,yDAAyD;QAEzD,2EAA2E;QAC3E,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YACtC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,0DAA0D;QAC1D,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAC5D,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;YACpC,MAAM,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;SACxB;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA6BG;IACH,KAAK,CAAC,SAAS,CAAC,GAAW,EAAE,YAA2B;QACtD,MAAM,MAAM,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACnE,MAAM,SAAS,GAAG,wBAAgB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAEhD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;QAErD,IAAI,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC;QAEzB,mBAAmB;QACnB,IAAI,MAAM,IAAI,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;YAChE,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAC7B,SAAS,EACT,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,CAChC,CAAC;SACH;QAED,QAAQ,SAAS,CAAC,YAAY,CAAC,WAAW,EAAE,EAAE;YAC5C,KAAK,SAAS,CAAC;YACf,KAAK,UAAU,CAAC,CAAC;gBACf,MAAM,qBAAqB,GAAG,MAAM,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;gBAEhE,IAAI,QAAQ,CAAC;gBACb,IAAI;oBACF,QAAQ,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;wBAC5C,IAAI,qBAAqB,KAAK,kBAAkB,EAAE;4BAChD,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;yBACjE;wBAED,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;oBAClB,CAAC,CAAC,CAAC;iBACJ;gBAAC,OAAO,KAAK,EAAE;oBACd,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,kBAAkB,MAAM,CAAC,GAAG,SAAS,CAAC,CAAC;oBAC5D,MAAM,KAAK,CAAC;iBACb;gBAED,OAAO,QAAQ;oBACb,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,EAAE,qBAAqB,CAAC;oBAClE,CAAC,CAAC,QAAQ;oBACV,CAAC,CAAC,IAAI,CAAC;aACV;YACD;gBACE,OAAO,MAAM,CAAC;SACjB;IACH,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA8CG;IACH,aAAa,CAAC,IAAI;QAChB,OAAO,qBAAa,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAClD,CAAC;IAsCD,UAAU,CAAC,GAAW,EAAE,IAAI;QAC1B,MAAM,MAAM,GAAG,wBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAC1D,OAAO,iBAAS,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACjC,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA6CG;IACH,aAAa,CAAC,IAAsC;QAClD,OAAO,qBAAa,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAClD,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA+BG;IACH,UAAU,CAAC,GAAW,EAAE,IAAI;QAC1B,MAAM,MAAM,GAAG,wBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAC1D,OAAO,iBAAS,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACjC,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;OAsBG;IACH,QAAQ,CAAC,OAAgB;QACvB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACzE,CAAC;IAED;;;;;;OAMG;IACH,kDAAkD;IAClD,eAAe,CAAC,IAAI,EAAE,IAAY,EAAE,qBAA6B;QAC/D,MAAM,QAAQ,GAAG,gBAAQ,CAAC,IAAI,EAAE,qBAAqB,CAAC,CAAC;QAEvD,+BAA+B;QAC/B,IAAI,QAAQ,KAAK,IAAI,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC;+CACyB,QAAQ;yDACE,IAAI;WAClD,CAAC,CAAC;SACR;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,eAAe,CAAC,MAAoB,EAAE,IAAyB;QACnE,IAAI,MAAM,CAAC,OAAO,KAAK,OAAO,EAAE;YAC9B,MAAM,IAAI,KAAK,CACb;UACE,MAAM,EAAE,CACX,CAAC;SACH;QACD,MAAM,OAAO,GAA6B,EAAE,CAAC;QAE7C,0BAA0B;QAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,gCAAgC;QAEtF,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;YAC1B,OAAO,OAAO,CAAC;SAChB,CAAC,kCAAkC;QACpC,MAAM,WAAW,GAAG,MAAM,sBAAc,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,2BAA2B;QAE1F,sDAAsD;QACtD,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,WAAW,EAAE,KAAK,EAAE,EAAE;YAChD,6BAA6B;YAC7B,MAAM,eAAe,GAAG,sBAAc,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;YAC1D,IAAI,YAAY,CAAC;YAEjB,yCAAyC;YACzC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,eAAe,CAAC,CAAC;YAE3D,IAAI,CAAC,YAAY,EAAE;gBACjB,kDAAkD;gBAClD,YAAY,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAChD,IAAI,CAAC,OAAO,CAAC,OAAO,EACpB,eAAe,CAChB,CAAC;gBAEF,OAAO,CAAC,IAAI,CAAC;oBACX,GAAG,EAAE,eAAe;oBACpB,KAAK,EAAE,YAAY;iBACpB,CAAC,CAAC;aACJ;SACF;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;CACF;AAhmBD,wBAgmBC;AAED,kBAAe,MAAM,CAAC","sourcesContent":["/* eslint-disable lines-between-class-members */\n/*\n    This file is part of ERC725.js.\n    ERC725.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    ERC725.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with ERC725.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * @file index.ts\n * @author Robert McLeod <@robertdavid010>, Fabian Vogelsteller <fabian@lukso.network>\n * @date 2020\n */\n\nimport { isAddress, toChecksumAddress } from 'web3-utils';\n\nimport GraphSource from './providers/subgraphProviderWrapper';\nimport Web3Source from './providers/web3ProviderWrapper';\nimport EthereumSource from './providers/ethereumProviderWrapper';\nimport {\n  decodeAllData,\n  decodeKey,\n  decodeKeyValue,\n  encodeAllData,\n  encodeArrayKey,\n  encodeKey,\n  getSchemaElement,\n  hashData,\n} from './lib/utils';\n\nimport {\n  Erc725Schema,\n  Erc725SchemaKeyType,\n  Erc725SchemaValueContent,\n  Erc725SchemaValueType,\n} from './types/Erc725Schema';\n\nimport { ERC725Config } from './types/Config';\n\nenum ProviderType {\n  GRAPH = 'graph',\n  ETHEREUM = 'ethereum',\n  WEB3 = 'web3',\n}\n\nexport {\n  Erc725Schema,\n  Erc725SchemaKeyType,\n  Erc725SchemaValueContent,\n  Erc725SchemaValueType,\n};\n\n/**\n * :::caution\n * This package is currently in early stages of development, use only for testing or experimentation purposes.\n * :::\n *\n */\nexport class ERC725 {\n  options: {\n    schema;\n    address?;\n    providerType?: ProviderType | null;\n    provider?;\n    config: ERC725Config;\n  };\n\n  /**\n   * Creates an instance of ERC725.\n   *\n   * **Example**\n   *\n   * ```js\n   * import ERC725 from 'erc725.js';\n   * import Web3 from 'web3';\n   *\n   * const schema = [\n   *     {\n   *         name: \"LSP3Profile\",\n   *         key: \"0x5ef83ad9559033e6e941db7d7c495acdce616347d28e90c7ce47cbfcfcad3bc5\",\n   *         keyType: \"Singleton\",\n   *         valueContent: \"JSONURL\",\n   *         valueType: \"bytes\",\n   *     },\n   * ];\n   *\n   * const address = \"0x0c03fba782b07bcf810deb3b7f0595024a444f4e\";\n   * const provider = new Web3.providers.HttpProvider(\"https://rpc.l14.lukso.network\");\n   * const config = {\n   *    ipfsGateway: 'https://ipfs.lukso.network/ipfs/'\n   * }\n   *\n   * const myERC725 = new ERC725(schema, address, provider, config);\n   * ```\n   *\n   * @param {Erc725Schema[]} schema More information available here: [LSP-2-ERC725YJSONSchema](https://github.com/lukso-network/LIPs/blob/master/LSPs/LSP-2-ERC725YJSONSchema.md)\n   * @param {string} address Address of the ERC725 contract you want to interact with\n   * @param {any} provider\n   * @param {ERC725Config} config Configuration object.\n   *\n   */\n  constructor(\n    schema: Erc725Schema[],\n    address?: string,\n    provider?: any,\n    config?: ERC725Config,\n  ) {\n    // NOTE: provider param can be either the provider, or and object with {provider:xxx ,type:xxx}\n\n    // TODO: Add check for schema format?\n    if (!schema) {\n      throw new Error('Missing schema.');\n    }\n\n    const defaultConfig = {\n      ipfsGateway: 'https://cloudflare-ipfs.com/ipfs/',\n    };\n\n    // Init options member\n    this.options = {\n      schema,\n      address,\n      providerType: null,\n      config: {\n        ...defaultConfig,\n        ...config,\n      },\n    };\n\n    // do not fail on no-provider\n    if (!provider) return;\n\n    const givenProvider = provider.provider || provider;\n\n    // CASE: GraphQL provider\n\n    if (provider.type === 'ApolloClient') {\n      this.options.providerType = ProviderType.GRAPH;\n      this.options.provider = new GraphSource(givenProvider);\n\n      // This checks to see if its a subgraph, since TheGraph subgraphs cannot checksum addresses to store\n      const isSubgraph = givenProvider.link?.options?.uri.includes('/subgraph');\n      if (!isSubgraph && address) {\n        this.options.address = toChecksumAddress(address);\n      }\n\n      // CASE: Ethereum provider\n    } else if (provider.request || provider.type === 'EthereumProvider') {\n      this.options.providerType = ProviderType.ETHEREUM;\n      this.options.provider = new EthereumSource(givenProvider);\n\n      // CASE: Web3 or deprecated ethereum provider\n    } else if (\n      (!provider.request && provider.send) ||\n      provider.type === 'Web3Provider'\n    ) {\n      this.options.providerType = ProviderType.WEB3;\n      this.options.provider = new Web3Source(givenProvider);\n\n      // CASE: Unknown provider\n    } else {\n      throw new Error(`Incorrect or unsupported provider ${givenProvider}`);\n    }\n  }\n\n  /**\n   * Get decoded data from the contract key value store.\n   * @param {string} key Either the schema name or key of a schema element on the class instance.\n   * @param {Erc725Schema} customSchema An optional schema to override attached schema of ERC725 class instance.\n   * @returns Returns decoded data as defined and expected in the schema.\n   *\n   * **Example**\n   *\n   * ```javascript\n   * await myERC725.getData(\"SupportedStandards:ERC725Account\");\n   * // > '0xafdeb5d6'\n   *\n   * await myERC725.getData('LSP3Profile');\n   * // > {\n   * //   hashFunction: 'keccak256(utf8)',\n   * //   hash: '0xd96ff7776660095f661d16010c4349aa7478a9129ce0670f771596a6ff2d864a',\n   * //   url: 'ipfs://QmbTmcbp8ZW23vkQrqkasMFqNg2z1iP4e3BCUMz9PKDsSV'\n   * // }\n   * ```\n   * :::note Try it\n   * https://stackblitz.com/edit/erc725js-get-data?devtoolsheight=66&file=index.js\n   * :::\n   */\n  async getData(key: string, customSchema?: Erc725Schema) {\n    if (!isAddress(this.options.address)) {\n      throw new Error('Missing ERC725 contract address.');\n    }\n    if (!this.options.provider) {\n      throw new Error('Missing provider.');\n    }\n\n    const schema = customSchema ? [customSchema] : this.options.schema;\n    const keySchema = getSchemaElement(schema, key);\n\n    // Get all the raw data possible.\n    const rawData = await this.options.provider.getData(\n      this.options.address,\n      keySchema.key,\n    );\n    // Decode and return the data\n\n    if (keySchema.keyType.toLowerCase() === 'array') {\n      const dat = [{ key: keySchema.key, value: rawData }];\n      const res = await this._getArrayValues(keySchema, dat);\n\n      // Handle empty arrays\n      if (res && res.length > 0) {\n        res.push(dat[0]); // add the raw data array length\n        return decodeKey(keySchema, res);\n      }\n\n      return []; // return empty array if no results\n    }\n\n    return decodeKey(keySchema, rawData);\n  }\n\n  /**\n   * Get all available data from the contract as per the class schema definition.\n   * @returns An object with schema element key names as properties, with corresponding associated decoded data as values.\n   *\n   * **Example**\n   *\n   * ```javascript\n   * await myERC725.getAllData();\n   * // >\n   * // {\n   * //     'SupportedStandards:ERC725Account': '0xafdeb5d6',\n   * //     LSP3Profile: {\n   * //       hashFunction: 'keccak256(utf8)',\n   * //       hash: '0x8700cccf72722106436cbc5309a8ebb308224d5f601990c070ea751a6bed4fc0',\n   * //       url: 'ipfs://QmV8K2ZPZHErvVzjSE7vewgEzvfLnhdea8RLJRqZGNu9Je'\n   * //     },\n   * //     LSP1UniversalReceiverDelegate: '0x1183790f29BE3cDfD0A102862fEA1a4a30b3AdAb',\n   * //     'LSP3IssuedAssets[]': [\n   * //       '0xD94353D9B005B3c0A9Da169b768a31C57844e490',\n   * //       '0xDaea594E385Fc724449E3118B2Db7E86dFBa1826',\n   * //       ...\n   * //     ]\n   * // }\n   * ```\n   * :::note Try it\n   * https://stackblitz.com/edit/erc725js-get-all-data?devtoolsheight=33&file=index.js\n   * :::\n   */\n  async getAllData() {\n    const results = {};\n    let res;\n    if (!isAddress(this.options.address)) {\n      throw new Error('Missing ERC725 contract address.');\n    }\n    if (!this.options.provider) {\n      throw new Error('Missing provider.');\n    }\n\n    // Get all the key hashes from the schema\n    const keyHashes = this.options.schema.map((e) => e.key);\n    // Get all the raw data from the provider based on schema key hashes\n    let allRawData = await this.options.provider.getAllData(\n      this.options.address,\n      keyHashes,\n    );\n\n    // Take out null data values, since data may not fulfill entire schema\n    allRawData = await allRawData.filter((e) => e.value !== null);\n\n    if (this.options.providerType === ProviderType.GRAPH) {\n      // If the provider type is a graphql client, we assume it can get ALL keys (including array keys)\n      res = decodeAllData(this.options.schema, allRawData);\n    } else {\n      // Otherwise we assume the array element keys are not available in raw results, so they must be fetched\n      const arraySchemas = this.options.schema.filter(\n        (e) => e.keyType.toLowerCase() === 'array',\n      );\n\n      // Get missing 'Array' fields for all arrays, as necessary\n      for (let index = 0; index < arraySchemas.length; index++) {\n        const schemaElement = arraySchemas[index];\n        const arrayValues = await this._getArrayValues(\n          schemaElement,\n          allRawData,\n        );\n        arrayValues.forEach((e) => allRawData.push(e));\n      }\n\n      this.options.schema.forEach((element) => {\n        results[element.name] = null;\n      });\n      res = decodeAllData(this.options.schema, allRawData);\n    }\n\n    // Now that we can safely assume we have all array values\n\n    // initialize values as null, to all schema name elements on results object\n    this.options.schema.forEach((element) => {\n      results[element.name] = null;\n    });\n\n    // Put the values in associated elements for return object\n    for (let index = 0; index < Object.keys(res).length; index++) {\n      const key = Object.keys(res)[index];\n      const element = res[key];\n      results[key] = element;\n    }\n\n    return results;\n  }\n\n  /**\n   * Fetches data from IPFS or an HTTP(s) endpoint stored as `JSONURL`, or `ASSETURL` valueContent type and\n   * compares the hash of the downloaded JSON with the hash stored on the blockchain. More details available here:\n   * https://github.com/lukso-network/LIPs/blob/master/LSPs/LSP-2-ERC725YJSONSchema.md#jsonurl\n   *\n   * @param {string} key The name (or the encoded name as the schema ‘key’) of the schema element in the class instance’s schema.\n   * @param {Erc725Schema} customSchema An optional custom schema element to use for decoding the returned value. Overrides attached schema of the class instance on this call only.\n   * @returns Returns the fetched and decoded value depending ‘valueContent’ for the schema element, otherwise works like getData\n   *\n   * **Example**\n   *\n   * ```javascript\n   * await myERC725.fetchData('LSP3Profile');\n   * // > {\n   * //   LSP3Profile: {\n   * //     name: 'the-dematerialised',\n   * //     description: 'The Destination for Digital Fashion. We are a Web 3.0 Marketplace, Authenticated on the LUKSO Blockchain. The Future is Dematerialised.',\n   * //     profileImage: [ [Object], [Object], [Object], [Object], [Object] ],\n   * //     backgroundImage: [ [Object], [Object], [Object], [Object], [Object] ],\n   * //     tags: [ 'marketplace' ],\n   * //     links: [ [Object], [Object], [Object], [Object] ]\n   * //   }\n   * // }\n   * ```\n   *\n   * :::note Try it\n   * https://stackblitz.com/edit/erc725js-fetch-data?devtoolsheight=66&file=index.js\n   * :::\n   *\n   */\n  async fetchData(key: string, customSchema?: Erc725Schema) {\n    const schema = customSchema ? [customSchema] : this.options.schema;\n    const keySchema = getSchemaElement(schema, key);\n\n    const result = await this.getData(key, customSchema);\n\n    if (!result) return null;\n\n    // change ipfs urls\n    if (result && result.url && result.url.indexOf('ipfs://') !== -1) {\n      result.url = result.url.replace(\n        'ipfs://',\n        this.options.config.ipfsGateway,\n      );\n    }\n\n    switch (keySchema.valueContent.toLowerCase()) {\n      case 'jsonurl':\n      case 'asseturl': {\n        const lowerCaseHashFunction = result.hashFunction.toLowerCase();\n\n        let response;\n        try {\n          response = await fetch(result.url).then((a) => {\n            if (lowerCaseHashFunction === 'keccak256(bytes)') {\n              return a.arrayBuffer().then((buffer) => new Uint8Array(buffer));\n            }\n\n            return a.json();\n          });\n        } catch (error) {\n          console.error(error, `GET request to ${result.url} failed`);\n          throw error;\n        }\n\n        return response &&\n          this._hashAndCompare(response, result.hash, lowerCaseHashFunction)\n          ? response\n          : null;\n      }\n      default:\n        return result;\n    }\n  }\n\n  /**\n   * @param data An object of keys matching to corresponding schema element names, with associated data.\n   * @returns all encoded data as per required by the schema and provided data\n   *\n   * **Example**\n   *\n   * ```javascript\n   * myERC725.encodeAllData({\n   *   LSP3Profile: {\n   *     hashFunction: 'keccak256(utf8)',\n   *     hash: '0x820464ddfac1bec070cc14a8daf04129871d458f2ca94368aae8391311af6361',\n   *     url: 'ifps://QmYr1VJLwerg6pEoscdhVGugo39pa6rycEZLjtRPDfW84UAx'\n   *   },\n   *   'LSP3IssuedAssets[]': [\n   *     '0xD94353D9B005B3c0A9Da169b768a31C57844e490',\n   *     '0xDaea594E385Fc724449E3118B2Db7E86dFBa1826'\n   *   ],\n   *   LSP1UniversalReceiverDelegate: '0x1183790f29BE3cDfD0A102862fEA1a4a30b3AdAb'\n   * });\n   *\n   * // > [\n   * //  {\n   * //      \"key\": \"0x5ef83ad9559033e6e941db7d7c495acdce616347d28e90c7ce47cbfcfcad3bc5\",\n   * //      \"value\": \"0x6f357c6a820464ddfac1bec070cc14a8daf04129871d458f2ca94368aae8391311af6361696670733a2f2f516d597231564a4c776572673670456f73636468564775676f3339706136727963455a4c6a7452504466573834554178\"\n   * //  },\n   * //  {\n   * //      \"key\": \"0x0cfc51aec37c55a4d0b1a65c6255c4bf2fbdf6277f3cc0730c45b828b6db8b47\",\n   * //      \"value\": \"0x1183790f29be3cdfd0a102862fea1a4a30b3adab\"\n   * //  },\n   * //  {\n   * //      \"key\": \"0x3a47ab5bd3a594c3a8995f8fa58d0876c96819ca4516bd76100c92462f2f9dc0\",\n   * //      \"value\": \"0x0000000000000000000000000000000000000000000000000000000000000002\"\n   * //  },\n   * //  {\n   * //      \"key\": \"0x3a47ab5bd3a594c3a8995f8fa58d087600000000000000000000000000000000\",\n   * //      \"value\": \"0xd94353d9b005b3c0a9da169b768a31c57844e490\"\n   * //  },\n   * //  {\n   * //      \"key\": \"0x3a47ab5bd3a594c3a8995f8fa58d087600000000000000000000000000000001\",\n   * //      \"value\": \"0xdaea594e385fc724449e3118b2db7e86dfba1826\"\n   * //  }\n   * // ]\n   * ```\n   * :::note Try it\n   * https://stackblitz.com/edit/erc725js-encode-all-data?devtoolsheight=66&file=index.js\n   * :::\n   */\n  encodeAllData(data) {\n    return encodeAllData(this.options.schema, data);\n  }\n\n  /**\n   * Encode data according to schema.\n   * @param key The name (or the encoded name as the schema ‘key’) of the schema element in the class instance’s schema.\n   * @param data Data structured according to the corresponding schema definition.\n   * @returns Returns encoded data as defined and expected in the schema (single value for keyTypes ‘Singleton’ & ‘Mapping’, or an array of encoded key-value objects for keyType ‘Array).\n   *\n   * **Example**\n   *\n   * ```javascript\n   * myERC725.encodeData('LSP3IssuedAssets[]', [\n   *     '0xD94353D9B005B3c0A9Da169b768a31C57844e490',\n   *     '0xDaea594E385Fc724449E3118B2Db7E86dFBa1826'\n   * ]);\n   * // > [\n   * //     {\n   * //         key: '0x3a47ab5bd3a594c3a8995f8fa58d0876c96819ca4516bd76100c92462f2f9dc0',\n   * //         value: '0x0000000000000000000000000000000000000000000000000000000000000002'\n   * //     },\n   * //     {\n   * //         key: '0x3a47ab5bd3a594c3a8995f8fa58d087600000000000000000000000000000000',\n   * //         value: '0xd94353d9b005b3c0a9da169b768a31c57844e490'\n   * //     },\n   * //     {\n   * //         key: '0x3a47ab5bd3a594c3a8995f8fa58d087600000000000000000000000000000001',\n   * //         value: '0xdaea594e385fc724449e3118b2db7e86dfba1826'\n   * //     }\n   * // ]\n   * ```\n   * :::note Try it\n   * https://stackblitz.com/edit/erc725js-encode-data?devtoolsheight=66&file=index.js\n   * :::\n   */\n  encodeData(\n    key: string,\n    data: { json: unknown; url: string; hashFunction: string },\n  ): string;\n  encodeData(key: string, data) {\n    const schema = getSchemaElement(this.options.schema, key);\n    return encodeKey(schema, data);\n  }\n\n  /**\n   * Decode all data available, as per the schema definition, in the contract.\n   * @param data An array of encoded key:value pairs.\n   * @returns An object with keys matching the ERC725 instance schema keys, with attached decoded data as expected by the schema.\n   *\n   * **Example**\n   *\n   * ```javascript\n   * myERC725.decodeAllData([\n   *    {\n   *        // Array length of LSP3IssuedAssets[]\n   *        key: '0x3a47ab5bd3a594c3a8995f8fa58d0876c96819ca4516bd76100c92462f2f9dc0',\n   *        value: '0x0000000000000000000000000000000000000000000000000000000000000002'\n   *    },\n   *    {\n   *        // First LSP3IssuedAssets[] array element\n   *        key: '0x3a47ab5bd3a594c3a8995f8fa58d087600000000000000000000000000000000',\n   *        value: '0xd94353d9b005b3c0a9da169b768a31c57844e490'\n   *    },\n   *    {\n   *        // Second LSP3IssuedAssets[] array element\n   *        key: '0x3a47ab5bd3a594c3a8995f8fa58d087600000000000000000000000000000001',\n   *        value: '0xdaea594e385fc724449e3118b2db7e86dfba1826'\n   *    },\n   *    {\n   *        // LSP3Profile\n   *        key: '0x5ef83ad9559033e6e941db7d7c495acdce616347d28e90c7ce47cbfcfcad3bc5',\n   *        value: '0x6f357c6a820464ddfac1bec070cc14a8daf04129871d458f2ca94368aae8391311af6361696670733a2f2f516d597231564a4c776572673670456f73636468564775676f3339706136727963455a4c6a7452504466573834554178'\n   *    }\n   * ]);\n   * // > {\n   * //   LSP3Profile: {\n   * //     hashFunction: 'keccak256(utf8)',\n   * //     hash: '0x820464ddfac1bec070cc14a8daf04129871d458f2ca94368aae8391311af6361',\n   * //     url: 'ifps://QmYr1VJLwerg6pEoscdhVGugo39pa6rycEZLjtRPDfW84UAx'\n   * //   },\n   * //   'LSP3IssuedAssets[]': [\n   * //     '0xD94353D9B005B3c0A9Da169b768a31C57844e490',\n   * //     '0xDaea594E385Fc724449E3118B2Db7E86dFBa1826'\n   * //   ]\n   * // }\n   * ```\n   * :::note Try it\n   * https://stackblitz.com/edit/erc725js-decode-all-data?devtoolsheight=33&file=index.js\n   * :::\n   */\n  decodeAllData(data: { key: string; value: string }[]) {\n    return decodeAllData(this.options.schema, data);\n  }\n\n  /**\n   * Decode data from contract store.\n   * @param {string} key Either the schema element name or key.\n   * @param data Either a single object, or an array of objects of key: value: pairs.\n   * @returns Returns decoded data as defined and expected in the schema:\n   *\n   * **Example**\n   *\n   * ```javascript\n   * myERC725.decodeData('LSP3IssuedAssets[]', [\n   *    {\n   *        key: '0x3a47ab5bd3a594c3a8995f8fa58d0876c96819ca4516bd76100c92462f2f9dc0',\n   *        value: '0x0000000000000000000000000000000000000000000000000000000000000002'\n   *    },\n   *    {\n   *        key: '0x3a47ab5bd3a594c3a8995f8fa58d087600000000000000000000000000000000',\n   *        value: '0xd94353d9b005b3c0a9da169b768a31c57844e490'\n   *    },\n   *    {\n   *        key: '0x3a47ab5bd3a594c3a8995f8fa58d087600000000000000000000000000000001',\n   *        value: '0xdaea594e385fc724449e3118b2db7e86dfba1826'\n   *    }\n   * ]);\n   * // > [\n   * //   '0xD94353D9B005B3c0A9Da169b768a31C57844e490',\n   * //   '0xDaea594E385Fc724449E3118B2Db7E86dFBa1826'\n   * // ]\n   * ```\n   * :::note Try it\n   * https://stackblitz.com/edit/erc725js-decode-data?devtoolsheight=33&file=index.js\n   * :::\n   */\n  decodeData(key: string, data) {\n    const schema = getSchemaElement(this.options.schema, key);\n    return decodeKey(schema, data);\n  }\n\n  /**\n   * An added utility method which simply returns the owner of the contract.\n   * Not directly related to ERC725 specifications.\n   *\n   * @param {string} [address]\n   * @returns The address of the contract owner as stored in the contract.\n   *\n   * :::caution\n   *\n   *    This method is not yet supported when using the `graph` provider type.\n   *\n   * :::\n   *\n   * **Example**\n   *\n   * ```javascript\n   * await myERC725.getOwner();\n   * // > '0x94933413384997F9402cc07a650e8A34d60F437A'\n   *\n   * await myERC725.getOwner(\"0x3000783905Cc7170cCCe49a4112Deda952DDBe24\");\n   * // > '0x7f1b797b2Ba023Da2482654b50724e92EB5a7091'\n   * ```\n   */\n  getOwner(address?: string): string {\n    return this.options.provider.getOwner(address || this.options.address);\n  }\n\n  /**\n   * Hashes the data received with the specified hashing function,\n   * and compares the result with the provided hash.\n   *\n   * @throws *Error* in case of a mismatch of the hashes.\n   * @internal\n   */\n  // eslint-disable-next-line class-methods-use-this\n  _hashAndCompare(data, hash: string, lowerCaseHashFunction: string) {\n    const jsonHash = hashData(data, lowerCaseHashFunction);\n\n    // throw error if hash mismatch\n    if (jsonHash !== hash) {\n      throw new Error(`\n              Hash mismatch, returned JSON (\"${jsonHash}\") is different than the one \n              linked from the ERC725Y Smart contract: \"${hash}\"\n          `);\n    }\n\n    return true;\n  }\n\n  /**\n   * @internal\n   * @param schema associated with the schema with keyType = 'Array'\n   *               the data includes the raw (encoded) length key-value pair for the array\n   * @param data array of key-value pairs, one of which is the length key for the schema array\n   *             Data can hold other field data not relevant here, and will be ignored\n   * @return an array of keys/values\n   */\n  async _getArrayValues(schema: Erc725Schema, data: Record<string, any>) {\n    if (schema.keyType !== 'Array') {\n      throw new Error(\n        `The \"_getArrayFields\" method requires a schema definition with \"keyType: Array\",\n        ${schema}`,\n      );\n    }\n    const results: { key: string; value }[] = [];\n\n    // 1. get the array length\n    const value = data.find((e) => e.key === schema.key); // get the length key/value pair\n\n    if (!value || !value.value) {\n      return results;\n    } // Handle empty/non-existent array\n    const arrayLength = await decodeKeyValue(schema, value.value); // get the int array length\n\n    // 2. Get the array values for the length of the array\n    for (let index = 0; index < arrayLength; index++) {\n      // 2.1 get the new schema key\n      const arrayElementKey = encodeArrayKey(schema.key, index);\n      let arrayElement;\n\n      // 2.2 Check the data first just in case.\n      arrayElement = data.find((e) => e.key === arrayElementKey);\n\n      if (!arrayElement) {\n        // 3. Otherwise we get the array key element value\n        arrayElement = await this.options.provider.getData(\n          this.options.address,\n          arrayElementKey,\n        );\n\n        results.push({\n          key: arrayElementKey,\n          value: arrayElement,\n        });\n      }\n    }\n\n    return results;\n  }\n}\n\nexport default ERC725;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6cbe0ab5e8bfa297c5e1d71491a3c7f1c5c025b5","contentHash":"e030b343a9812244bb6afc860f929a20abbc01984ecae391cce72c405e4e5b34"},"/home/rryter/Projects/alliance-erc725.js/src/providers/subgraphProviderWrapper.ts":{"path":"/home/rryter/Projects/alliance-erc725.js/src/providers/subgraphProviderWrapper.ts","statementMap":{"0":{"start":{"line":20,"column":0},"end":{"line":20,"column":62}},"1":{"start":{"line":25,"column":18},"end":{"line":25,"column":43}},"2":{"start":{"line":29,"column":8},"end":{"line":29,"column":27}},"3":{"start":{"line":30,"column":8},"end":{"line":30,"column":33}},"4":{"start":{"line":34,"column":8},"end":{"line":34,"column":100}},"5":{"start":{"line":37,"column":8},"end":{"line":40,"column":9}},"6":{"start":{"line":39,"column":12},"end":{"line":39,"column":79}},"7":{"start":{"line":42,"column":22},"end":{"line":42,"column":67}},"8":{"start":{"line":43,"column":23},"end":{"line":43,"column":59}},"9":{"start":{"line":45,"column":20},"end":{"line":46,"column":61}},"10":{"start":{"line":47,"column":8},"end":{"line":47,"column":33}},"11":{"start":{"line":50,"column":22},"end":{"line":50,"column":59}},"12":{"start":{"line":51,"column":23},"end":{"line":51,"column":59}},"13":{"start":{"line":53,"column":8},"end":{"line":53,"column":56}},"14":{"start":{"line":56,"column":0},"end":{"line":56,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":26},"end":{"line":31,"column":5}},"line":27},"1":{"name":"(anonymous_1)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":15},"end":{"line":35,"column":5}},"line":33},"2":{"name":"(anonymous_2)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":33},"end":{"line":48,"column":5}},"line":36},"3":{"name":"(anonymous_3)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":30},"end":{"line":54,"column":5}},"line":49}},"branchMap":{"0":{"loc":{"start":{"line":37,"column":8},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":40,"column":9}},{"start":{"line":37,"column":8},"end":{"line":40,"column":9}}],"line":37},"1":{"loc":{"start":{"line":37,"column":12},"end":{"line":37,"column":40}},"type":"binary-expr","locations":[{"start":{"line":37,"column":12},"end":{"line":37,"column":17}},{"start":{"line":37,"column":21},"end":{"line":37,"column":40}}],"line":37},"2":{"loc":{"start":{"line":45,"column":20},"end":{"line":46,"column":61}},"type":"binary-expr","locations":[{"start":{"line":45,"column":20},"end":{"line":45,"column":63}},{"start":{"line":46,"column":12},"end":{"line":46,"column":61}}],"line":45},"3":{"loc":{"start":{"line":47,"column":15},"end":{"line":47,"column":32}},"type":"cond-expr","locations":[{"start":{"line":47,"column":22},"end":{"line":47,"column":26}},{"start":{"line":47,"column":29},"end":{"line":47,"column":32}}],"line":47}},"s":{"0":1,"1":1,"2":23,"3":23,"4":0,"5":28,"6":0,"7":28,"8":28,"9":28,"10":28,"11":1,"12":1,"13":1,"14":1},"f":{"0":23,"1":0,"2":28,"3":1},"b":{"0":[0,28],"1":[28,28],"2":[28,28],"3":[0,28]},"inputSourceMap":{"version":3,"file":"/home/rryter/Projects/alliance-erc725.js/src/providers/subgraphProviderWrapper.ts","sources":["/home/rryter/Projects/alliance-erc725.js/src/providers/subgraphProviderWrapper.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;EAYE;AACF;;;;GAIG;;AAEH;;;EAGE;AAEF,4CAAyC;AAEzC,MAAqB,WAAW;IAI9B,YAAY,QAAa;QAHzB,+CAA+C;QACxC,aAAQ,GAAQ,EAAE,CAAC;QAGxB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,kDAAkD;IAClD,QAAQ;QACN,MAAM,IAAI,KAAK,CACb,0EAA0E,CAC3E,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI;QACzB,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAChC,8BAA8B;YAC9B,MAAM,IAAI,KAAK,CAAC,2CAA2C,IAAI,EAAE,CAAC,CAAC;SACpE;QACD,4CAA4C;QAC5C,MAAM,KAAK,GAAG,iBAAO,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAClD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QACpD,0CAA0C;QAC1C,MAAM,GAAG,GACP,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3C,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACpD,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;IAC3B,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,OAAO;QACtB,MAAM,KAAK,GAAG,iBAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAC1C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QACpD,8BAA8B;QAC9B,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC;CACF;AApCD,8BAoCC","sourcesContent":["/*\n    This file is part of ERC725.js.\n    ERC725.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    ERC725.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file providers/subgraphProviderWrapper.ts\n * @author Robert McLeod <@robertdavid010>, Fabian Vogelsteller <fabian@lukso.network>\n * @date 2020\n */\n\n/*\n  This file will handle querying the graphql sever\n  in accordance with implementation of datastore in subgraph definition\n*/\n\nimport { queries } from '../lib/queries';\n\nexport default class GraphSource {\n  // TODO: provide correct interface for provider\n  public provider: any = {};\n\n  constructor(provider: any) {\n    this.provider = provider;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getOwner() {\n    throw new Error(\n      \"We're sorry, getOwner() method not yet supported in graph provider type.\",\n    );\n  }\n\n  async getData(address, keys) {\n    if (!keys || Array.isArray(keys)) {\n      // TODO: support array of keys\n      throw new Error(`Incorrect parameter 'keys' in getData() ${keys}`);\n    }\n    // Get the value for the specific single key\n    const query = queries.getDataByKey(address, keys);\n    const result = await this.provider.query({ query });\n    // Single out the first result as expected\n    const ret =\n      result.data[Object.keys(result.data)[0]][0] &&\n      result.data[Object.keys(result.data)[0]][0].value;\n    return !ret ? null : ret;\n  }\n\n  async getAllData(address) {\n    const query = queries.getAllData(address);\n    const result = await this.provider.query({ query });\n    // Return the data query array\n    return result.data[Object.keys(result.data)[0]];\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4c4ad04756312b671b8a2c84a7f8184a3c048859","contentHash":"f9a84b6a1a7b360ab5049b48103495bdd43d867e7598d814887f5ef22a90b7ea"},"/home/rryter/Projects/alliance-erc725.js/src/lib/queries.ts":{"path":"/home/rryter/Projects/alliance-erc725.js/src/lib/queries.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":6,"column":22},"end":{"line":6,"column":44}},"3":{"start":{"line":7,"column":0},"end":{"line":38,"column":2}},"4":{"start":{"line":12,"column":8},"end":{"line":21,"column":6}},"5":{"start":{"line":27,"column":8},"end":{"line":36,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":31},"end":{"line":22,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":19},"end":{"line":37,"column":5}},"line":26}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":28,"5":1},"f":{"0":28,"1":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/rryter/Projects/alliance-erc725.js/src/lib/queries.ts","sources":["/home/rryter/Projects/alliance-erc725.js/src/lib/queries.ts"],"names":[],"mappings":";;;AAAA,8BAA8B;AAC9B,oBAAoB;AACpB,6CAAkC;AAErB,QAAA,OAAO,GAAG;IACrB;;OAEG;IACH,YAAY,CAAC,OAAe,EAAE,GAAW;QACvC,OAAO,iBAAG,CAAA;;0CAE4B,OAAO,UAAU,GAAG;;;;;;;KAOzD,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,UAAU,CAAC,EAAU;QACnB,OAAO,iBAAG,CAAA;;0CAE4B,EAAE;;;;;;;KAOvC,CAAC;IACJ,CAAC;CACF,CAAC","sourcesContent":["// Queries for ERC725 subgraph\n/* eslint-disable */\nimport { gql } from 'graphql-tag';\n\nexport const queries = {\n  /**\n   * Get data for single key from ERC725 instance\n   */\n  getDataByKey(address: string, key: string) {\n    return gql`\n    {\n      erc725DataStores (where:{address:\"${address}\",key:\"${key}\"}) {\n        id\n        address\n        key\n        value\n      }\n    }\n    `;\n  },\n\n  /**\n   * Get the ERC725 instance kv pairs\n   */\n  getAllData(id: string) {\n    return gql`\n    {\n      erc725DataStores (where:{address:\"${id}\"}) {\n        id\n        address\n        key\n        value\n      }\n    }\n    `;\n  },\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ce3b8fdc962a1ef3ba7c003f479981ae65d51d04","contentHash":"266e6d76de89dcc72e0c457a8d507331edc0a3c56573e6e91bd5cd36099d2087"},"/home/rryter/Projects/alliance-erc725.js/src/providers/web3ProviderWrapper.ts":{"path":"/home/rryter/Projects/alliance-erc725.js/src/providers/web3ProviderWrapper.ts","statementMap":{"0":{"start":{"line":20,"column":22},"end":{"line":26,"column":3}},"1":{"start":{"line":21,"column":4},"end":{"line":21,"column":33}},"2":{"start":{"line":21,"column":26},"end":{"line":21,"column":33}},"3":{"start":{"line":22,"column":4},"end":{"line":22,"column":89}},"4":{"start":{"line":22,"column":71},"end":{"line":22,"column":83}},"5":{"start":{"line":24,"column":4},"end":{"line":24,"column":33}},"6":{"start":{"line":24,"column":26},"end":{"line":24,"column":33}},"7":{"start":{"line":25,"column":4},"end":{"line":25,"column":17}},"8":{"start":{"line":27,"column":25},"end":{"line":31,"column":2}},"9":{"start":{"line":28,"column":4},"end":{"line":28,"column":72}},"10":{"start":{"line":30,"column":4},"end":{"line":30,"column":21}},"11":{"start":{"line":32,"column":19},"end":{"line":38,"column":1}},"12":{"start":{"line":33,"column":4},"end":{"line":33,"column":42}},"13":{"start":{"line":33,"column":31},"end":{"line":33,"column":42}},"14":{"start":{"line":34,"column":17},"end":{"line":34,"column":19}},"15":{"start":{"line":35,"column":4},"end":{"line":35,"column":141}},"16":{"start":{"line":35,"column":21},"end":{"line":35,"column":141}},"17":{"start":{"line":35,"column":40},"end":{"line":35,"column":141}},"18":{"start":{"line":35,"column":109},"end":{"line":35,"column":141}},"19":{"start":{"line":36,"column":4},"end":{"line":36,"column":36}},"20":{"start":{"line":37,"column":4},"end":{"line":37,"column":18}},"21":{"start":{"line":39,"column":0},"end":{"line":39,"column":62}},"22":{"start":{"line":44,"column":12},"end":{"line":44,"column":49}},"23":{"start":{"line":45,"column":20},"end":{"line":45,"column":47}},"24":{"start":{"line":46,"column":17},"end":{"line":46,"column":43}},"25":{"start":{"line":48,"column":16},"end":{"line":48,"column":27}},"26":{"start":{"line":49,"column":14},"end":{"line":49,"column":15}},"27":{"start":{"line":52,"column":8},"end":{"line":52,"column":33}},"28":{"start":{"line":55,"column":23},"end":{"line":55,"column":103}},"29":{"start":{"line":57,"column":8},"end":{"line":60,"column":9}},"30":{"start":{"line":59,"column":12},"end":{"line":59,"column":31}},"31":{"start":{"line":61,"column":8},"end":{"line":61,"column":65}},"32":{"start":{"line":64,"column":8},"end":{"line":64,"column":154}},"33":{"start":{"line":68,"column":24},"end":{"line":68,"column":26}},"34":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"35":{"start":{"line":69,"column":25},"end":{"line":69,"column":26}},"36":{"start":{"line":70,"column":12},"end":{"line":70,"column":97}},"37":{"start":{"line":73,"column":24},"end":{"line":73,"column":57}},"38":{"start":{"line":75,"column":29},"end":{"line":75,"column":31}},"39":{"start":{"line":76,"column":8},"end":{"line":81,"column":9}},"40":{"start":{"line":76,"column":25},"end":{"line":76,"column":26}},"41":{"start":{"line":77,"column":12},"end":{"line":80,"column":15}},"42":{"start":{"line":79,"column":94},"end":{"line":79,"column":126}},"43":{"start":{"line":82,"column":8},"end":{"line":82,"column":28}},"44":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"45":{"start":{"line":87,"column":12},"end":{"line":87,"column":77}},"46":{"start":{"line":89,"column":21},"end":{"line":91,"column":55}},"47":{"start":{"line":93,"column":8},"end":{"line":106,"column":10}},"48":{"start":{"line":109,"column":8},"end":{"line":119,"column":11}},"49":{"start":{"line":111,"column":12},"end":{"line":118,"column":15}},"50":{"start":{"line":112,"column":16},"end":{"line":117,"column":17}},"51":{"start":{"line":113,"column":20},"end":{"line":113,"column":30}},"52":{"start":{"line":116,"column":20},"end":{"line":116,"column":31}},"53":{"start":{"line":123,"column":8},"end":{"line":126,"column":9}},"54":{"start":{"line":124,"column":12},"end":{"line":124,"column":81}},"55":{"start":{"line":125,"column":12},"end":{"line":125,"column":24}},"56":{"start":{"line":127,"column":26},"end":{"line":127,"column":39}},"57":{"start":{"line":128,"column":8},"end":{"line":132,"column":105}},"58":{"start":{"line":135,"column":0},"end":{"line":135,"column":29}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":20,"column":74},"end":{"line":20,"column":75}},"loc":{"start":{"line":20,"column":96},"end":{"line":23,"column":1}},"line":20},"1":{"name":"(anonymous_1)","decl":{"start":{"line":22,"column":58},"end":{"line":22,"column":59}},"loc":{"start":{"line":22,"column":69},"end":{"line":22,"column":85}},"line":22},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":6},"end":{"line":23,"column":7}},"loc":{"start":{"line":23,"column":28},"end":{"line":26,"column":1}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":27,"column":80},"end":{"line":27,"column":81}},"loc":{"start":{"line":27,"column":95},"end":{"line":29,"column":1}},"line":27},"4":{"name":"(anonymous_4)","decl":{"start":{"line":29,"column":5},"end":{"line":29,"column":6}},"loc":{"start":{"line":29,"column":20},"end":{"line":31,"column":1}},"line":29},"5":{"name":"(anonymous_5)","decl":{"start":{"line":32,"column":50},"end":{"line":32,"column":51}},"loc":{"start":{"line":32,"column":65},"end":{"line":38,"column":1}},"line":32},"6":{"name":"(anonymous_6)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":26},"end":{"line":53,"column":5}},"line":51},"7":{"name":"(anonymous_7)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":28},"end":{"line":62,"column":5}},"line":54},"8":{"name":"(anonymous_8)","decl":{"start":{"line":63,"column":4},"end":{"line":63,"column":5}},"loc":{"start":{"line":63,"column":36},"end":{"line":65,"column":5}},"line":63},"9":{"name":"(anonymous_9)","decl":{"start":{"line":66,"column":4},"end":{"line":66,"column":5}},"loc":{"start":{"line":66,"column":36},"end":{"line":83,"column":5}},"line":66},"10":{"name":"(anonymous_10)","decl":{"start":{"line":79,"column":81},"end":{"line":79,"column":82}},"loc":{"start":{"line":79,"column":94},"end":{"line":79,"column":126}},"line":79},"11":{"name":"(anonymous_11)","decl":{"start":{"line":85,"column":4},"end":{"line":85,"column":5}},"loc":{"start":{"line":85,"column":52},"end":{"line":107,"column":5}},"line":85},"12":{"name":"(anonymous_12)","decl":{"start":{"line":108,"column":4},"end":{"line":108,"column":5}},"loc":{"start":{"line":108,"column":33},"end":{"line":120,"column":5}},"line":108},"13":{"name":"(anonymous_13)","decl":{"start":{"line":109,"column":27},"end":{"line":109,"column":28}},"loc":{"start":{"line":109,"column":48},"end":{"line":119,"column":9}},"line":109},"14":{"name":"(anonymous_14)","decl":{"start":{"line":111,"column":40},"end":{"line":111,"column":41}},"loc":{"start":{"line":111,"column":50},"end":{"line":118,"column":13}},"line":111},"15":{"name":"(anonymous_15)","decl":{"start":{"line":122,"column":4},"end":{"line":122,"column":5}},"loc":{"start":{"line":122,"column":34},"end":{"line":133,"column":5}},"line":122}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":22},"end":{"line":26,"column":3}},"type":"binary-expr","locations":[{"start":{"line":20,"column":23},"end":{"line":20,"column":27}},{"start":{"line":20,"column":31},"end":{"line":20,"column":51}},{"start":{"line":20,"column":57},"end":{"line":26,"column":2}}],"line":20},"1":{"loc":{"start":{"line":20,"column":57},"end":{"line":26,"column":2}},"type":"cond-expr","locations":[{"start":{"line":20,"column":74},"end":{"line":23,"column":1}},{"start":{"line":23,"column":6},"end":{"line":26,"column":1}}],"line":20},"2":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":33}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":33}},{"start":{"line":21,"column":4},"end":{"line":21,"column":33}}],"line":21},"3":{"loc":{"start":{"line":24,"column":4},"end":{"line":24,"column":33}},"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":33}},{"start":{"line":24,"column":4},"end":{"line":24,"column":33}}],"line":24},"4":{"loc":{"start":{"line":27,"column":25},"end":{"line":31,"column":2}},"type":"binary-expr","locations":[{"start":{"line":27,"column":26},"end":{"line":27,"column":30}},{"start":{"line":27,"column":34},"end":{"line":27,"column":57}},{"start":{"line":27,"column":63},"end":{"line":31,"column":1}}],"line":27},"5":{"loc":{"start":{"line":27,"column":63},"end":{"line":31,"column":1}},"type":"cond-expr","locations":[{"start":{"line":27,"column":80},"end":{"line":29,"column":1}},{"start":{"line":29,"column":5},"end":{"line":31,"column":1}}],"line":27},"6":{"loc":{"start":{"line":32,"column":19},"end":{"line":38,"column":1}},"type":"binary-expr","locations":[{"start":{"line":32,"column":20},"end":{"line":32,"column":24}},{"start":{"line":32,"column":28},"end":{"line":32,"column":45}},{"start":{"line":32,"column":50},"end":{"line":38,"column":1}}],"line":32},"7":{"loc":{"start":{"line":33,"column":4},"end":{"line":33,"column":42}},"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":42}},{"start":{"line":33,"column":4},"end":{"line":33,"column":42}}],"line":33},"8":{"loc":{"start":{"line":33,"column":8},"end":{"line":33,"column":29}},"type":"binary-expr","locations":[{"start":{"line":33,"column":8},"end":{"line":33,"column":11}},{"start":{"line":33,"column":15},"end":{"line":33,"column":29}}],"line":33},"9":{"loc":{"start":{"line":35,"column":4},"end":{"line":35,"column":141}},"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":141}},{"start":{"line":35,"column":4},"end":{"line":35,"column":141}}],"line":35},"10":{"loc":{"start":{"line":35,"column":40},"end":{"line":35,"column":141}},"type":"if","locations":[{"start":{"line":35,"column":40},"end":{"line":35,"column":141}},{"start":{"line":35,"column":40},"end":{"line":35,"column":141}}],"line":35},"11":{"loc":{"start":{"line":35,"column":44},"end":{"line":35,"column":107}},"type":"binary-expr","locations":[{"start":{"line":35,"column":44},"end":{"line":35,"column":59}},{"start":{"line":35,"column":63},"end":{"line":35,"column":107}}],"line":35},"12":{"loc":{"start":{"line":57,"column":8},"end":{"line":60,"column":9}},"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":60,"column":9}},{"start":{"line":57,"column":8},"end":{"line":60,"column":9}}],"line":57},"13":{"loc":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},{"start":{"line":86,"column":8},"end":{"line":88,"column":9}}],"line":86},"14":{"loc":{"start":{"line":89,"column":21},"end":{"line":91,"column":55}},"type":"cond-expr","locations":[{"start":{"line":90,"column":14},"end":{"line":90,"column":87}},{"start":{"line":91,"column":14},"end":{"line":91,"column":55}}],"line":89},"15":{"loc":{"start":{"line":112,"column":16},"end":{"line":117,"column":17}},"type":"if","locations":[{"start":{"line":112,"column":16},"end":{"line":117,"column":17}},{"start":{"line":112,"column":16},"end":{"line":117,"column":17}}],"line":112},"16":{"loc":{"start":{"line":123,"column":8},"end":{"line":126,"column":9}},"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":126,"column":9}},{"start":{"line":123,"column":8},"end":{"line":126,"column":9}}],"line":123},"17":{"loc":{"start":{"line":128,"column":15},"end":{"line":132,"column":104}},"type":"cond-expr","locations":[{"start":{"line":129,"column":14},"end":{"line":129,"column":18}},{"start":{"line":132,"column":16},"end":{"line":132,"column":104}}],"line":128}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":1,"17":14,"18":0,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":48,"28":0,"29":0,"30":0,"31":0,"32":65,"33":1,"34":1,"35":1,"36":22,"37":1,"38":1,"39":1,"40":1,"41":22,"42":253,"43":1,"44":87,"45":0,"46":87,"47":87,"48":66,"49":66,"50":66,"51":0,"52":66,"53":87,"54":0,"55":0,"56":87,"57":87,"58":1},"f":{"0":0,"1":0,"2":0,"3":1,"4":0,"5":1,"6":48,"7":0,"8":65,"9":1,"10":253,"11":87,"12":66,"13":66,"14":66,"15":87},"b":{"0":[1,1,1],"1":[1,0],"2":[0,0],"3":[0,0],"4":[1,1,1],"5":[1,0],"6":[1,1,1],"7":[0,1],"8":[1,1],"9":[1,0],"10":[0,14],"11":[14,14],"12":[0,0],"13":[0,87],"14":[87,0],"15":[0,66],"16":[0,87],"17":[0,87]},"inputSourceMap":{"version":3,"file":"/home/rryter/Projects/alliance-erc725.js/src/providers/web3ProviderWrapper.ts","sources":["/home/rryter/Projects/alliance-erc725.js/src/providers/web3ProviderWrapper.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;EAYE;AACF;;;;GAIG;;;;;;;;;;;;;;;;;;;;;AAEH;;;EAGE;AAEF,kDAAoC;AAEpC,gDAA6C;AAE7C,4CAAyC;AAEzC,aAAa;AACb,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;AAC5B,IAAI,OAAO,GAAG,CAAC,CAAC;AAEhB,MAAqB,UAAU;IAG7B,YAAY,QAAQ;QAClB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,OAAe;QAC5B,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,aAAa,CACrC,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,eAAM,CAAC,KAAK,CAAC,CAC9C,CAAC;QACF,aAAa;QACb,IAAI,MAAM,CAAC,KAAK,EAAE;YAChB,aAAa;YACb,MAAM,MAAM,CAAC,KAAK,CAAC;SACpB;QAED,OAAO,IAAI,CAAC,aAAa,CAAC,eAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAClD,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,OAAe,EAAE,OAAe;QAC5C,OAAO,IAAI,CAAC,aAAa,CACvB,eAAM,CAAC,QAAQ,EACf,MAAM,IAAI,CAAC,aAAa,CACtB,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,eAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,CAC1D,CACF,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,OAAe,EAAE,IAAI;QACpC,mBAAmB;QACnB,MAAM,OAAO,GAAc,EAAE,CAAC;QAC9B,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAChD,OAAO,CAAC,IAAI,CACV,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,eAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAC9D,CAAC;SACH;QAED,YAAY;QACZ,MAAM,OAAO,GAAQ,MAAM,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAEvD,sBAAsB;QACtB,MAAM,YAAY,GAGZ,EAAE,CAAC;QACT,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACnD,YAAY,CAAC,IAAI,CAAC;gBAChB,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC;gBAChB,KAAK,EAAE,IAAI,CAAC,aAAa,CACvB,eAAM,CAAC,QAAQ,EACf,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,CAAC,CAC5D;aACF,CAAC,CAAC;SACJ;QAED,OAAO,YAAY,CAAC;IACtB,CAAC;IAED,kDAAkD;IAClD,iBAAiB,CACf,OAAe,EACf,MAAc,EACd,WAAoB;QAEpB,IAAI,CAAC,qBAAS,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAC9B,MAAM,IAAI,KAAK,CAAC,mBAAmB,GAAG,MAAM,GAAG,gBAAgB,CAAC,CAAC;SAClE;QAED,MAAM,IAAI,GAAG,WAAW;YACtB,CAAC,CAAC,qBAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,GAAG,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;YAC/D,CAAC,CAAC,qBAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC;QAElC,4CAA4C;QAC5C,OAAO;YACL,OAAO,EAAE,KAAK;YACd,MAAM,EAAE,UAAU;YAClB,MAAM,EAAE;gBACN;oBACE,EAAE,EAAE,OAAO;oBACX,GAAG,EAAE,qBAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG;oBAClC,QAAQ,EAAE,qBAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,QAAQ;oBAC5C,KAAK,EAAE,qBAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,KAAK;oBACtC,IAAI;iBACL;aACF;YACD,EAAE,EAAE,CAAC,OAAO,IAAI,CAAC,CAAC;SACnB,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,OAAO;QACzB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,wDAAwD;YACxD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBACnC,IAAI,CAAC,EAAE;oBACL,MAAM,CAAC,CAAC,CAAC,CAAC;iBACX;qBAAM;oBACL,OAAO,CAAC,CAAC,CAAC,CAAC;iBACZ;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kDAAkD;IAClD,aAAa,CAAC,MAAc,EAAE,MAAM;QAClC,IAAI,CAAC,qBAAS,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAC9B,OAAO,CAAC,KAAK,CAAC,oBAAoB,GAAG,MAAM,GAAG,qBAAqB,CAAC,CAAC;YACrE,OAAO,IAAI,CAAC;SACb;QACD,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC;QAChC,OAAO,SAAS,KAAK,IAAI;YACvB,CAAC,CAAC,IAAI;YACN,CAAC,CAAC,8CAA8C;gBAC9C,aAAa;gBACb,OAAO,CAAC,eAAe,CACrB,qBAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,cAAc,EACxC,SAAS,CACV,CAAC;IACR,CAAC;CACF;AAvHD,6BAuHC","sourcesContent":["/*\n    This file is part of ERC725.js.\n    ERC725.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    ERC725.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file providers/web3ProviderWrapper.ts\n * @author Robert McLeod <@robertdavid010>, Fabian Vogelsteller <fabian@lukso.network>\n * @date 2020\n */\n\n/*\n  This file will handle querying the Ethereum web3 rpc based on a given provider\n  in accordance with implementation of smart contract interfaces of ERC725\n*/\n\nimport * as abi from 'web3-eth-abi';\n\nimport { CONSTANTS } from '../lib/constants';\nimport { JsonRpc } from '../types/JsonRpc';\nimport { Method } from '../types/Method';\n\n// @ts-ignore\nconst web3abi = abi.default;\nlet idCount = 1;\n\nexport default class Web3Source {\n  public provider: any;\n\n  constructor(provider) {\n    this.provider = provider;\n  }\n\n  async getOwner(address: string) {\n    const result = await this._callContract(\n      this._constructJSONRPC(address, Method.OWNER),\n    );\n    // @ts-ignore\n    if (result.error) {\n      // @ts-ignore\n      throw result.error;\n    }\n\n    return this._decodeResult(Method.OWNER, result);\n  }\n\n  async getData(address: string, keyHash: string) {\n    return this._decodeResult(\n      Method.GET_DATA,\n      await this._callContract(\n        this._constructJSONRPC(address, Method.GET_DATA, keyHash),\n      ),\n    );\n  }\n\n  async getAllData(address: string, keys) {\n    // generate payload\n    const payload: JsonRpc[] = [];\n    for (let index = 0; index < keys.length; index++) {\n      payload.push(\n        this._constructJSONRPC(address, Method.GET_DATA, keys[index]),\n      );\n    }\n\n    // call node\n    const results: any = await this._callContract(payload);\n\n    // map results to keys\n    const returnValues: {\n      key: string;\n      value: Record<string, any> | null;\n    }[] = [];\n    for (let index = 0; index < payload.length; index++) {\n      returnValues.push({\n        key: keys[index],\n        value: this._decodeResult(\n          Method.GET_DATA,\n          results.find((element) => payload[index].id === element.id),\n        ),\n      });\n    }\n\n    return returnValues;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  _constructJSONRPC(\n    address: string,\n    method: Method,\n    methodParam?: string,\n  ): JsonRpc {\n    if (!CONSTANTS.methods[method]) {\n      throw new Error('Contract method \"' + method + '\"not supported');\n    }\n\n    const data = methodParam\n      ? CONSTANTS.methods[method].sig + methodParam.replace('0x', '')\n      : CONSTANTS.methods[method].sig;\n\n    // eslint-disable-next-line no-return-assign\n    return {\n      jsonrpc: '2.0',\n      method: 'eth_call',\n      params: [\n        {\n          to: address,\n          gas: CONSTANTS.methods[method].gas,\n          gasPrice: CONSTANTS.methods[method].gasPrice,\n          value: CONSTANTS.methods[method].value,\n          data,\n        },\n      ],\n      id: (idCount += 1),\n    };\n  }\n\n  async _callContract(payload) {\n    return new Promise((resolve, reject) => {\n      // Send old web3 method with callback to resolve promise\n      this.provider.send(payload, (e, r) => {\n        if (e) {\n          reject(e);\n        } else {\n          resolve(r);\n        }\n      });\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  _decodeResult(method: Method, result) {\n    if (!CONSTANTS.methods[method]) {\n      console.error('Contract method: \"' + method + '\" is not supported.');\n      return null;\n    }\n    const rpcResult = result.result;\n    return rpcResult === '0x'\n      ? null\n      : // eslint-disable-next-line operator-linebreak\n        // @ts-ignore\n        web3abi.decodeParameter(\n          CONSTANTS.methods[method].returnEncoding,\n          rpcResult,\n        );\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"80c9a09aa3142229a4a8ece1cb5d01ca46424dbc","contentHash":"9e96e7036c2742987ab4480e43006fcb8e904f124027a93038f7bf0b60d2db1b"},"/home/rryter/Projects/alliance-erc725.js/src/lib/constants.ts":{"path":"/home/rryter/Projects/alliance-erc725.js/src/lib/constants.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":43}},"4":{"start":{"line":6,"column":0},"end":{"line":49,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/rryter/Projects/alliance-erc725.js/src/lib/constants.ts","sources":["/home/rryter/Projects/alliance-erc725.js/src/lib/constants.ts"],"names":[],"mappings":";;;AAAA,2CAAoD;AACpD,4CAA+D;AAWlD,QAAA,SAAS,GAAc;IAClC,OAAO,EAAE;QACP,CAAC,eAAM,CAAC,QAAQ,CAAC,EAAE;YACjB,GAAG,EAAE,YAAY;YACjB,GAAG,EAAE,wBAAW,CAAC,OAAO,CAAC;YACzB,QAAQ,EAAE,wBAAW,CAAC,SAAS,CAAC;YAChC,KAAK,EAAE,wBAAW,CAAC,CAAC,CAAC;YACrB,cAAc,EAAE,iBAAQ,CAAC,KAAK;SAC/B;QACD,CAAC,eAAM,CAAC,UAAU,CAAC,EAAE;YACnB,GAAG,EAAE,YAAY;YACjB,GAAG,EAAE,wBAAW,CAAC,OAAO,CAAC;YACzB,QAAQ,EAAE,wBAAW,CAAC,SAAS,CAAC;YAChC,KAAK,EAAE,wBAAW,CAAC,CAAC,CAAC;YACrB,cAAc,EAAE,iBAAQ,CAAC,OAAO;SACjC;QACD,CAAC,eAAM,CAAC,QAAQ,CAAC,EAAE;YACjB,GAAG,EAAE,YAAY;YACjB,GAAG,EAAE,wBAAW,CAAC,OAAO,CAAC;YACzB,QAAQ,EAAE,wBAAW,CAAC,SAAS,CAAC;YAChC,KAAK,EAAE,wBAAW,CAAC,CAAC,CAAC;YACrB,cAAc,EAAE,iBAAQ,CAAC,aAAa;SACvC;QACD,CAAC,eAAM,CAAC,KAAK,CAAC,EAAE;YACd,GAAG,EAAE,YAAY;YACjB,GAAG,EAAE,wBAAW,CAAC,OAAO,CAAC;YACzB,QAAQ,EAAE,wBAAW,CAAC,SAAS,CAAC;YAChC,KAAK,EAAE,wBAAW,CAAC,CAAC,CAAC;YACrB,cAAc,EAAE,iBAAQ,CAAC,OAAO;SACjC;KACF;IACD,aAAa,EAAE;QACb;YACE,IAAI,EAAE,iBAAiB;YACvB,GAAG,EAAE,YAAY;YACjB,MAAM,EAAE,sBAAS;SAClB;QACD;YACE,IAAI,EAAE,kBAAkB;YACxB,GAAG,EAAE,YAAY;YACjB,MAAM,EAAE,sBAAS;SAClB;KACF;CACF,CAAC","sourcesContent":["import { numberToHex, keccak256 } from 'web3-utils';\nimport { MethodData, Encoding, Method } from '../types/Method';\n\ninterface Constants {\n  methods: Record<Method, MethodData>;\n  hashFunctions: {\n    name: string;\n    sig: string;\n    method: (value: any) => string;\n  }[];\n}\n\nexport const CONSTANTS: Constants = {\n  methods: {\n    [Method.GET_DATA]: {\n      sig: '0x54f6127f',\n      gas: numberToHex(2000000),\n      gasPrice: numberToHex(100000000),\n      value: numberToHex(0),\n      returnEncoding: Encoding.BYTES,\n    },\n    [Method.DATA_COUNT]: {\n      sig: '0x5da40c47',\n      gas: numberToHex(2000000),\n      gasPrice: numberToHex(100000000),\n      value: numberToHex(0),\n      returnEncoding: Encoding.UINT256,\n    },\n    [Method.ALL_DATA]: {\n      sig: '0xc559acef',\n      gas: numberToHex(2000000),\n      gasPrice: numberToHex(100000000),\n      value: numberToHex(0),\n      returnEncoding: Encoding.BYTES32_ARRAY,\n    },\n    [Method.OWNER]: {\n      sig: '0x8da5cb5b',\n      gas: numberToHex(2000000),\n      gasPrice: numberToHex(100000000),\n      value: numberToHex(0),\n      returnEncoding: Encoding.ADDRESS,\n    },\n  },\n  hashFunctions: [\n    {\n      name: 'keccak256(utf8)',\n      sig: '0x6f357c6a',\n      method: keccak256,\n    },\n    {\n      name: 'keccak256(bytes)',\n      sig: '0x8019f9b1',\n      method: keccak256,\n    },\n  ],\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d6604967dd636d014d38939626fef151f51c5ec3","contentHash":"1a14ab56a24864454b826983024ce77aa06e1ae5628aabcab9f3ffe06a4b8525"},"/home/rryter/Projects/alliance-erc725.js/src/types/Method.ts":{"path":"/home/rryter/Projects/alliance-erc725.js/src/types/Method.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":43}},"2":{"start":{"line":5,"column":0},"end":{"line":10,"column":53}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":35}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":39}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":35}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":30}},"7":{"start":{"line":12,"column":0},"end":{"line":17,"column":59}},"8":{"start":{"line":13,"column":4},"end":{"line":13,"column":32}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":36}},"10":{"start":{"line":15,"column":4},"end":{"line":15,"column":44}},"11":{"start":{"line":16,"column":4},"end":{"line":16,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":19},"end":{"line":10,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":1},"end":{"line":12,"column":2}},"loc":{"start":{"line":12,"column":21},"end":{"line":17,"column":1}},"line":12}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":12},"end":{"line":10,"column":51}},"type":"binary-expr","locations":[{"start":{"line":10,"column":12},"end":{"line":10,"column":26}},{"start":{"line":10,"column":31},"end":{"line":10,"column":50}}],"line":10},"1":{"loc":{"start":{"line":17,"column":14},"end":{"line":17,"column":57}},"type":"binary-expr","locations":[{"start":{"line":17,"column":14},"end":{"line":17,"column":30}},{"start":{"line":17,"column":35},"end":{"line":17,"column":56}}],"line":17}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1},"f":{"0":1,"1":1},"b":{"0":[1,1],"1":[1,1]},"inputSourceMap":{"version":3,"file":"/home/rryter/Projects/alliance-erc725.js/src/types/Method.ts","sources":["/home/rryter/Projects/alliance-erc725.js/src/types/Method.ts"],"names":[],"mappings":";;;AAAA,IAAY,MAKX;AALD,WAAY,MAAM;IAChB,8BAAoB,CAAA;IACpB,kCAAwB,CAAA;IACxB,8BAAoB,CAAA;IACpB,yBAAe,CAAA;AACjB,CAAC,EALW,MAAM,GAAN,cAAM,KAAN,cAAM,QAKjB;AAED,IAAY,QAKX;AALD,WAAY,QAAQ;IAClB,2BAAe,CAAA;IACf,+BAAmB,CAAA;IACnB,uCAA2B,CAAA;IAC3B,+BAAmB,CAAA;AACrB,CAAC,EALW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAKnB","sourcesContent":["export enum Method {\n  GET_DATA = 'getData',\n  DATA_COUNT = 'dataCount',\n  ALL_DATA = 'allData',\n  OWNER = 'owner',\n}\n\nexport enum Encoding {\n  BYTES = 'bytes',\n  UINT256 = 'uint256',\n  BYTES32_ARRAY = 'bytes32[]',\n  ADDRESS = 'address',\n}\n\nexport interface MethodData {\n  sig: string;\n  gas: string;\n  gasPrice: string;\n  value: string;\n  returnEncoding: Encoding;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7f0d838e754b52ce8d1a6ad5f5349b0256ccb1e1","contentHash":"f6ec518d8648acc577fa1a65c0e83d24a9df9184f1e14c398dc3a01bf345def6"},"/home/rryter/Projects/alliance-erc725.js/src/providers/ethereumProviderWrapper.ts":{"path":"/home/rryter/Projects/alliance-erc725.js/src/providers/ethereumProviderWrapper.ts","statementMap":{"0":{"start":{"line":20,"column":22},"end":{"line":26,"column":3}},"1":{"start":{"line":21,"column":4},"end":{"line":21,"column":33}},"2":{"start":{"line":21,"column":26},"end":{"line":21,"column":33}},"3":{"start":{"line":22,"column":4},"end":{"line":22,"column":89}},"4":{"start":{"line":22,"column":71},"end":{"line":22,"column":83}},"5":{"start":{"line":24,"column":4},"end":{"line":24,"column":33}},"6":{"start":{"line":24,"column":26},"end":{"line":24,"column":33}},"7":{"start":{"line":25,"column":4},"end":{"line":25,"column":17}},"8":{"start":{"line":27,"column":25},"end":{"line":31,"column":2}},"9":{"start":{"line":28,"column":4},"end":{"line":28,"column":72}},"10":{"start":{"line":30,"column":4},"end":{"line":30,"column":21}},"11":{"start":{"line":32,"column":19},"end":{"line":38,"column":1}},"12":{"start":{"line":33,"column":4},"end":{"line":33,"column":42}},"13":{"start":{"line":33,"column":31},"end":{"line":33,"column":42}},"14":{"start":{"line":34,"column":17},"end":{"line":34,"column":19}},"15":{"start":{"line":35,"column":4},"end":{"line":35,"column":141}},"16":{"start":{"line":35,"column":21},"end":{"line":35,"column":141}},"17":{"start":{"line":35,"column":40},"end":{"line":35,"column":141}},"18":{"start":{"line":35,"column":109},"end":{"line":35,"column":141}},"19":{"start":{"line":36,"column":4},"end":{"line":36,"column":36}},"20":{"start":{"line":37,"column":4},"end":{"line":37,"column":18}},"21":{"start":{"line":39,"column":0},"end":{"line":39,"column":62}},"22":{"start":{"line":44,"column":12},"end":{"line":44,"column":49}},"23":{"start":{"line":45,"column":20},"end":{"line":45,"column":47}},"24":{"start":{"line":46,"column":17},"end":{"line":46,"column":43}},"25":{"start":{"line":48,"column":16},"end":{"line":48,"column":27}},"26":{"start":{"line":51,"column":8},"end":{"line":51,"column":33}},"27":{"start":{"line":52,"column":8},"end":{"line":52,"column":54}},"28":{"start":{"line":55,"column":23},"end":{"line":55,"column":77}},"29":{"start":{"line":56,"column":23},"end":{"line":56,"column":57}},"30":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"31":{"start":{"line":58,"column":12},"end":{"line":58,"column":31}},"32":{"start":{"line":60,"column":8},"end":{"line":60,"column":65}},"33":{"start":{"line":63,"column":21},"end":{"line":65,"column":10}},"34":{"start":{"line":66,"column":8},"end":{"line":66,"column":58}},"35":{"start":{"line":67,"column":8},"end":{"line":67,"column":68}},"36":{"start":{"line":70,"column":24},"end":{"line":70,"column":26}},"37":{"start":{"line":71,"column":8},"end":{"line":76,"column":9}},"38":{"start":{"line":71,"column":25},"end":{"line":71,"column":26}},"39":{"start":{"line":72,"column":12},"end":{"line":75,"column":15}},"40":{"start":{"line":77,"column":8},"end":{"line":77,"column":23}},"41":{"start":{"line":81,"column":21},"end":{"line":83,"column":55}},"42":{"start":{"line":85,"column":8},"end":{"line":91,"column":10}},"43":{"start":{"line":94,"column":8},"end":{"line":96,"column":68}},"44":{"start":{"line":100,"column":8},"end":{"line":103,"column":9}},"45":{"start":{"line":101,"column":12},"end":{"line":101,"column":81}},"46":{"start":{"line":102,"column":12},"end":{"line":102,"column":24}},"47":{"start":{"line":104,"column":8},"end":{"line":108,"column":102}},"48":{"start":{"line":111,"column":0},"end":{"line":111,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":20,"column":74},"end":{"line":20,"column":75}},"loc":{"start":{"line":20,"column":96},"end":{"line":23,"column":1}},"line":20},"1":{"name":"(anonymous_1)","decl":{"start":{"line":22,"column":58},"end":{"line":22,"column":59}},"loc":{"start":{"line":22,"column":69},"end":{"line":22,"column":85}},"line":22},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":6},"end":{"line":23,"column":7}},"loc":{"start":{"line":23,"column":28},"end":{"line":26,"column":1}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":27,"column":80},"end":{"line":27,"column":81}},"loc":{"start":{"line":27,"column":95},"end":{"line":29,"column":1}},"line":27},"4":{"name":"(anonymous_4)","decl":{"start":{"line":29,"column":5},"end":{"line":29,"column":6}},"loc":{"start":{"line":29,"column":20},"end":{"line":31,"column":1}},"line":29},"5":{"name":"(anonymous_5)","decl":{"start":{"line":32,"column":50},"end":{"line":32,"column":51}},"loc":{"start":{"line":32,"column":65},"end":{"line":38,"column":1}},"line":32},"6":{"name":"(anonymous_6)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":38},"end":{"line":53,"column":5}},"line":50},"7":{"name":"(anonymous_7)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":28},"end":{"line":61,"column":5}},"line":54},"8":{"name":"(anonymous_8)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":36},"end":{"line":68,"column":5}},"line":62},"9":{"name":"(anonymous_9)","decl":{"start":{"line":69,"column":4},"end":{"line":69,"column":5}},"loc":{"start":{"line":69,"column":36},"end":{"line":78,"column":5}},"line":69},"10":{"name":"(anonymous_10)","decl":{"start":{"line":80,"column":4},"end":{"line":80,"column":5}},"loc":{"start":{"line":80,"column":52},"end":{"line":92,"column":5}},"line":80},"11":{"name":"(anonymous_11)","decl":{"start":{"line":93,"column":4},"end":{"line":93,"column":5}},"loc":{"start":{"line":93,"column":32},"end":{"line":97,"column":5}},"line":93},"12":{"name":"(anonymous_12)","decl":{"start":{"line":99,"column":4},"end":{"line":99,"column":5}},"loc":{"start":{"line":99,"column":34},"end":{"line":109,"column":5}},"line":99}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":22},"end":{"line":26,"column":3}},"type":"binary-expr","locations":[{"start":{"line":20,"column":23},"end":{"line":20,"column":27}},{"start":{"line":20,"column":31},"end":{"line":20,"column":51}},{"start":{"line":20,"column":57},"end":{"line":26,"column":2}}],"line":20},"1":{"loc":{"start":{"line":20,"column":57},"end":{"line":26,"column":2}},"type":"cond-expr","locations":[{"start":{"line":20,"column":74},"end":{"line":23,"column":1}},{"start":{"line":23,"column":6},"end":{"line":26,"column":1}}],"line":20},"2":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":33}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":33}},{"start":{"line":21,"column":4},"end":{"line":21,"column":33}}],"line":21},"3":{"loc":{"start":{"line":24,"column":4},"end":{"line":24,"column":33}},"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":33}},{"start":{"line":24,"column":4},"end":{"line":24,"column":33}}],"line":24},"4":{"loc":{"start":{"line":27,"column":25},"end":{"line":31,"column":2}},"type":"binary-expr","locations":[{"start":{"line":27,"column":26},"end":{"line":27,"column":30}},{"start":{"line":27,"column":34},"end":{"line":27,"column":57}},{"start":{"line":27,"column":63},"end":{"line":31,"column":1}}],"line":27},"5":{"loc":{"start":{"line":27,"column":63},"end":{"line":31,"column":1}},"type":"cond-expr","locations":[{"start":{"line":27,"column":80},"end":{"line":29,"column":1}},{"start":{"line":29,"column":5},"end":{"line":31,"column":1}}],"line":27},"6":{"loc":{"start":{"line":32,"column":19},"end":{"line":38,"column":1}},"type":"binary-expr","locations":[{"start":{"line":32,"column":20},"end":{"line":32,"column":24}},{"start":{"line":32,"column":28},"end":{"line":32,"column":45}},{"start":{"line":32,"column":50},"end":{"line":38,"column":1}}],"line":32},"7":{"loc":{"start":{"line":33,"column":4},"end":{"line":33,"column":42}},"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":42}},{"start":{"line":33,"column":4},"end":{"line":33,"column":42}}],"line":33},"8":{"loc":{"start":{"line":33,"column":8},"end":{"line":33,"column":29}},"type":"binary-expr","locations":[{"start":{"line":33,"column":8},"end":{"line":33,"column":11}},{"start":{"line":33,"column":15},"end":{"line":33,"column":29}}],"line":33},"9":{"loc":{"start":{"line":35,"column":4},"end":{"line":35,"column":141}},"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":141}},{"start":{"line":35,"column":4},"end":{"line":35,"column":141}}],"line":35},"10":{"loc":{"start":{"line":35,"column":40},"end":{"line":35,"column":141}},"type":"if","locations":[{"start":{"line":35,"column":40},"end":{"line":35,"column":141}},{"start":{"line":35,"column":40},"end":{"line":35,"column":141}}],"line":35},"11":{"loc":{"start":{"line":35,"column":44},"end":{"line":35,"column":107}},"type":"binary-expr","locations":[{"start":{"line":35,"column":44},"end":{"line":35,"column":59}},{"start":{"line":35,"column":63},"end":{"line":35,"column":107}}],"line":35},"12":{"loc":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},{"start":{"line":57,"column":8},"end":{"line":59,"column":9}}],"line":57},"13":{"loc":{"start":{"line":66,"column":17},"end":{"line":66,"column":57}},"type":"cond-expr","locations":[{"start":{"line":66,"column":35},"end":{"line":66,"column":48}},{"start":{"line":66,"column":51},"end":{"line":66,"column":57}}],"line":66},"14":{"loc":{"start":{"line":81,"column":21},"end":{"line":83,"column":55}},"type":"cond-expr","locations":[{"start":{"line":82,"column":14},"end":{"line":82,"column":87}},{"start":{"line":83,"column":14},"end":{"line":83,"column":55}}],"line":81},"15":{"loc":{"start":{"line":94,"column":15},"end":{"line":96,"column":67}},"type":"cond-expr","locations":[{"start":{"line":95,"column":14},"end":{"line":95,"column":52}},{"start":{"line":96,"column":14},"end":{"line":96,"column":67}}],"line":94},"16":{"loc":{"start":{"line":100,"column":8},"end":{"line":103,"column":9}},"type":"if","locations":[{"start":{"line":100,"column":8},"end":{"line":103,"column":9}},{"start":{"line":100,"column":8},"end":{"line":103,"column":9}}],"line":100},"17":{"loc":{"start":{"line":104,"column":15},"end":{"line":108,"column":101}},"type":"cond-expr","locations":[{"start":{"line":105,"column":14},"end":{"line":105,"column":18}},{"start":{"line":108,"column":16},"end":{"line":108,"column":101}}],"line":104}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":1,"17":14,"18":0,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":28,"34":28,"35":28,"36":1,"37":1,"38":1,"39":22,"40":1,"41":28,"42":28,"43":28,"44":28,"45":0,"46":0,"47":28,"48":1},"f":{"0":0,"1":0,"2":0,"3":1,"4":0,"5":1,"6":1,"7":0,"8":28,"9":1,"10":28,"11":28,"12":28},"b":{"0":[1,1,1],"1":[1,0],"2":[0,0],"3":[0,0],"4":[1,1,1],"5":[1,0],"6":[1,1,1],"7":[0,1],"8":[1,1],"9":[1,0],"10":[0,14],"11":[14,14],"12":[0,0],"13":[0,28],"14":[28,0],"15":[0,28],"16":[0,28],"17":[0,28]},"inputSourceMap":{"version":3,"file":"/home/rryter/Projects/alliance-erc725.js/src/providers/ethereumProviderWrapper.ts","sources":["/home/rryter/Projects/alliance-erc725.js/src/providers/ethereumProviderWrapper.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n    This file is part of ERC725.js.\n    ERC725.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    ERC725.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file providers/ethereumProviderWrapper.ts\n * @author Robert McLeod <@robertdavid010>, Fabian Vogelsteller <fabian@lukso.network>\n * @date 2020\n */\n\n/*\n  This file will handle querying the Ethereum provider api in accordance with\n  implementation of smart contract interfaces of ERC725\n*/\n\nimport * as abi from 'web3-eth-abi';\n\nimport { CONSTANTS } from '../lib/constants';\nimport { Method } from '../types/Method';\n\n// @ts-ignore\nconst web3Abi = abi.default;\n\nexport default class EthereumSource {\n  public provider: any;\n\n  public deprecated: boolean;\n\n  constructor(provider: any, deprecated?: 'deprecated') {\n    this.provider = provider;\n    this.deprecated = deprecated === 'deprecated';\n  }\n\n  async getOwner(address: string) {\n    const params = this._constructJSONRPC(address, Method.OWNER);\n    const result = await this._callContract([params]);\n    if (result.error) {\n      throw result.error;\n    }\n\n    return this._decodeResult(Method.OWNER, result);\n  }\n\n  async getData(address: string, keyHash: string) {\n    let result = await this._callContract([\n      this._constructJSONRPC(address, Method.GET_DATA, keyHash),\n    ]);\n    result = this.deprecated ? result.result : result;\n    return this._decodeResult(Method.GET_DATA, result);\n  }\n\n  async getAllData(address: string, keys: string[]) {\n    const results: {\n      key: string;\n      value: Record<string, any> | null;\n    }[] = [];\n\n    for (let index = 0; index < keys.length; index++) {\n      results.push({\n        key: keys[index],\n        value: await this.getData(address, keys[index]),\n      });\n    }\n\n    return results;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  _constructJSONRPC(address: string, method: Method, methodParam?: string) {\n    const data = methodParam\n      ? CONSTANTS.methods[method].sig + methodParam.replace('0x', '')\n      : CONSTANTS.methods[method].sig;\n    // eslint-disable-next-line no-return-assign\n    return {\n      to: address,\n      gas: CONSTANTS.methods[method].gas,\n      gasPrice: CONSTANTS.methods[method].gasPrice,\n      value: CONSTANTS.methods[method].value,\n      data,\n    };\n  }\n\n  async _callContract(params: any) {\n    return this.deprecated\n      ? this.provider.send('eth_call', params)\n      : this.provider.request({ method: 'eth_call', params });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  _decodeResult(method: Method, result: string) {\n    if (!CONSTANTS.methods[method]) {\n      console.error('Contract method: \"' + method + '\" is not supported.');\n      return null;\n    }\n\n    return result === '0x'\n      ? null\n      : // eslint-disable-next-line operator-linebreak\n        // @ts-ignore\n        web3Abi.decodeParameter(\n          CONSTANTS.methods[method].returnEncoding,\n          result,\n        );\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d4b3fcf657b841f3b415aecae4500e5025f58cae","contentHash":"7bde81c8b3410f6e7a7771540e3ecbc53ac7903b70df780763b62cb21b729c10"},"/home/rryter/Projects/alliance-erc725.js/src/lib/utils.ts":{"path":"/home/rryter/Projects/alliance-erc725.js/src/lib/utils.ts","statementMap":{"0":{"start":{"line":20,"column":0},"end":{"line":20,"column":62}},"1":{"start":{"line":21,"column":0},"end":{"line":21,"column":271}},"2":{"start":{"line":22,"column":21},"end":{"line":22,"column":42}},"3":{"start":{"line":23,"column":18},"end":{"line":23,"column":38}},"4":{"start":{"line":32,"column":4},"end":{"line":36,"column":5}},"5":{"start":{"line":34,"column":8},"end":{"line":35,"column":68}},"6":{"start":{"line":38,"column":25},"end":{"line":40,"column":60}},"7":{"start":{"line":41,"column":20},"end":{"line":41,"column":115}},"8":{"start":{"line":43,"column":4},"end":{"line":59,"column":5}},"9":{"start":{"line":46,"column":24},"end":{"line":46,"column":26}},"10":{"start":{"line":47,"column":8},"end":{"line":50,"column":9}},"11":{"start":{"line":47,"column":25},"end":{"line":47,"column":26}},"12":{"start":{"line":48,"column":28},"end":{"line":48,"column":40}},"13":{"start":{"line":49,"column":12},"end":{"line":49,"column":102}},"14":{"start":{"line":51,"column":8},"end":{"line":51,"column":25}},"15":{"start":{"line":53,"column":9},"end":{"line":59,"column":5}},"16":{"start":{"line":55,"column":8},"end":{"line":55,"column":91}},"17":{"start":{"line":57,"column":9},"end":{"line":59,"column":5}},"18":{"start":{"line":58,"column":8},"end":{"line":58,"column":23}},"19":{"start":{"line":60,"column":4},"end":{"line":69,"column":5}},"20":{"start":{"line":65,"column":8},"end":{"line":65,"column":86}},"21":{"start":{"line":67,"column":9},"end":{"line":69,"column":5}},"22":{"start":{"line":68,"column":8},"end":{"line":68,"column":86}},"23":{"start":{"line":70,"column":4},"end":{"line":70,"column":18}},"24":{"start":{"line":72,"column":0},"end":{"line":72,"column":40}},"25":{"start":{"line":81,"column":4},"end":{"line":81,"column":107}},"26":{"start":{"line":83,"column":0},"end":{"line":83,"column":40}},"27":{"start":{"line":91,"column":18},"end":{"line":91,"column":35}},"28":{"start":{"line":93,"column":4},"end":{"line":96,"column":39}},"29":{"start":{"line":98,"column":0},"end":{"line":98,"column":38}},"30":{"start":{"line":107,"column":4},"end":{"line":109,"column":5}},"31":{"start":{"line":108,"column":8},"end":{"line":108,"column":93}},"32":{"start":{"line":110,"column":4},"end":{"line":119,"column":6}},"33":{"start":{"line":121,"column":0},"end":{"line":121,"column":52}},"34":{"start":{"line":130,"column":4},"end":{"line":149,"column":5}},"35":{"start":{"line":131,"column":24},"end":{"line":131,"column":26}},"36":{"start":{"line":132,"column":8},"end":{"line":147,"column":9}},"37":{"start":{"line":132,"column":25},"end":{"line":132,"column":26}},"38":{"start":{"line":133,"column":32},"end":{"line":133,"column":44}},"39":{"start":{"line":134,"column":12},"end":{"line":141,"column":13}},"40":{"start":{"line":136,"column":16},"end":{"line":140,"column":19}},"41":{"start":{"line":142,"column":30},"end":{"line":142,"column":65}},"42":{"start":{"line":143,"column":12},"end":{"line":146,"column":15}},"43":{"start":{"line":148,"column":8},"end":{"line":148,"column":23}},"44":{"start":{"line":150,"column":4},"end":{"line":153,"column":5}},"45":{"start":{"line":152,"column":8},"end":{"line":152,"column":45}},"46":{"start":{"line":154,"column":4},"end":{"line":156,"column":13}},"47":{"start":{"line":157,"column":4},"end":{"line":157,"column":16}},"48":{"start":{"line":159,"column":0},"end":{"line":159,"column":30}},"49":{"start":{"line":167,"column":20},"end":{"line":167,"column":22}},"50":{"start":{"line":168,"column":4},"end":{"line":185,"column":5}},"51":{"start":{"line":168,"column":21},"end":{"line":168,"column":22}},"52":{"start":{"line":169,"column":30},"end":{"line":169,"column":44}},"53":{"start":{"line":170,"column":29},"end":{"line":170,"column":53}},"54":{"start":{"line":171,"column":20},"end":{"line":171,"column":58}},"55":{"start":{"line":172,"column":8},"end":{"line":184,"column":9}},"56":{"start":{"line":173,"column":12},"end":{"line":183,"column":13}},"57":{"start":{"line":175,"column":16},"end":{"line":175,"column":37}},"58":{"start":{"line":179,"column":16},"end":{"line":182,"column":19}},"59":{"start":{"line":186,"column":4},"end":{"line":186,"column":19}},"60":{"start":{"line":188,"column":0},"end":{"line":188,"column":38}},"61":{"start":{"line":197,"column":4},"end":{"line":204,"column":5}},"62":{"start":{"line":199,"column":8},"end":{"line":203,"column":35}},"63":{"start":{"line":205,"column":23},"end":{"line":207,"column":60}},"64":{"start":{"line":208,"column":20},"end":{"line":208,"column":115}},"65":{"start":{"line":210,"column":4},"end":{"line":216,"column":5}},"66":{"start":{"line":215,"column":8},"end":{"line":215,"column":84}},"67":{"start":{"line":218,"column":4},"end":{"line":220,"column":5}},"68":{"start":{"line":219,"column":8},"end":{"line":219,"column":37}},"69":{"start":{"line":221,"column":4},"end":{"line":223,"column":5}},"70":{"start":{"line":222,"column":8},"end":{"line":222,"column":21}},"71":{"start":{"line":226,"column":4},"end":{"line":234,"column":5}},"72":{"start":{"line":228,"column":24},"end":{"line":228,"column":26}},"73":{"start":{"line":229,"column":8},"end":{"line":232,"column":9}},"74":{"start":{"line":229,"column":25},"end":{"line":229,"column":26}},"75":{"start":{"line":230,"column":28},"end":{"line":230,"column":40}},"76":{"start":{"line":231,"column":12},"end":{"line":231,"column":102}},"77":{"start":{"line":233,"column":8},"end":{"line":233,"column":23}},"78":{"start":{"line":235,"column":4},"end":{"line":235,"column":85}},"79":{"start":{"line":237,"column":0},"end":{"line":237,"column":40}},"80":{"start":{"line":245,"column":4},"end":{"line":262,"column":5}},"81":{"start":{"line":246,"column":24},"end":{"line":246,"column":26}},"82":{"start":{"line":247,"column":29},"end":{"line":247,"column":68}},"83":{"start":{"line":247,"column":47},"end":{"line":247,"column":67}},"84":{"start":{"line":249,"column":8},"end":{"line":251,"column":9}},"85":{"start":{"line":250,"column":12},"end":{"line":250,"column":27}},"86":{"start":{"line":252,"column":28},"end":{"line":252,"column":75}},"87":{"start":{"line":254,"column":8},"end":{"line":260,"column":9}},"88":{"start":{"line":254,"column":25},"end":{"line":254,"column":26}},"89":{"start":{"line":255,"column":30},"end":{"line":255,"column":65}},"90":{"start":{"line":256,"column":32},"end":{"line":256,"column":74}},"91":{"start":{"line":256,"column":50},"end":{"line":256,"column":73}},"92":{"start":{"line":257,"column":12},"end":{"line":259,"column":13}},"93":{"start":{"line":258,"column":16},"end":{"line":258,"column":75}},"94":{"start":{"line":261,"column":8},"end":{"line":261,"column":23}},"95":{"start":{"line":263,"column":4},"end":{"line":274,"column":5}},"96":{"start":{"line":265,"column":8},"end":{"line":272,"column":9}},"97":{"start":{"line":266,"column":29},"end":{"line":266,"column":68}},"98":{"start":{"line":266,"column":47},"end":{"line":266,"column":67}},"99":{"start":{"line":268,"column":12},"end":{"line":270,"column":13}},"100":{"start":{"line":269,"column":16},"end":{"line":269,"column":28}},"101":{"start":{"line":271,"column":12},"end":{"line":271,"column":58}},"102":{"start":{"line":273,"column":8},"end":{"line":273,"column":45}},"103":{"start":{"line":275,"column":4},"end":{"line":277,"column":13}},"104":{"start":{"line":278,"column":4},"end":{"line":278,"column":16}},"105":{"start":{"line":280,"column":0},"end":{"line":280,"column":30}},"106":{"start":{"line":288,"column":20},"end":{"line":288,"column":22}},"107":{"start":{"line":289,"column":4},"end":{"line":295,"column":5}},"108":{"start":{"line":289,"column":21},"end":{"line":289,"column":22}},"109":{"start":{"line":290,"column":30},"end":{"line":290,"column":44}},"110":{"start":{"line":291,"column":20},"end":{"line":291,"column":50}},"111":{"start":{"line":292,"column":8},"end":{"line":294,"column":9}},"112":{"start":{"line":293,"column":12},"end":{"line":293,"column":46}},"113":{"start":{"line":296,"column":4},"end":{"line":296,"column":19}},"114":{"start":{"line":298,"column":0},"end":{"line":298,"column":38}},"115":{"start":{"line":306,"column":20},"end":{"line":306,"column":72}},"116":{"start":{"line":307,"column":26},"end":{"line":307,"column":64}},"117":{"start":{"line":307,"column":46},"end":{"line":307,"column":63}},"118":{"start":{"line":308,"column":4},"end":{"line":310,"column":5}},"119":{"start":{"line":309,"column":8},"end":{"line":309,"column":94}},"120":{"start":{"line":311,"column":4},"end":{"line":311,"column":25}},"121":{"start":{"line":313,"column":0},"end":{"line":313,"column":44}},"122":{"start":{"line":315,"column":4},"end":{"line":324,"column":5}},"123":{"start":{"line":318,"column":12},"end":{"line":318,"column":64}},"124":{"start":{"line":321,"column":12},"end":{"line":321,"column":48}},"125":{"start":{"line":323,"column":12},"end":{"line":323,"column":100}},"126":{"start":{"line":326,"column":0},"end":{"line":326,"column":28}}},"fnMap":{"0":{"name":"encodeKeyValue","decl":{"start":{"line":30,"column":9},"end":{"line":30,"column":23}},"loc":{"start":{"line":30,"column":56},"end":{"line":71,"column":1}},"line":30},"1":{"name":"encodeArrayKey","decl":{"start":{"line":80,"column":9},"end":{"line":80,"column":23}},"loc":{"start":{"line":80,"column":36},"end":{"line":82,"column":1}},"line":80},"2":{"name":"encodeKeyName","decl":{"start":{"line":90,"column":9},"end":{"line":90,"column":22}},"loc":{"start":{"line":90,"column":29},"end":{"line":97,"column":1}},"line":90},"3":{"name":"transposeArraySchema","decl":{"start":{"line":105,"column":9},"end":{"line":105,"column":29}},"loc":{"start":{"line":105,"column":45},"end":{"line":120,"column":1}},"line":105},"4":{"name":"encodeKey","decl":{"start":{"line":128,"column":9},"end":{"line":128,"column":18}},"loc":{"start":{"line":128,"column":34},"end":{"line":158,"column":1}},"line":128},"5":{"name":"encodeAllData","decl":{"start":{"line":166,"column":9},"end":{"line":166,"column":22}},"loc":{"start":{"line":166,"column":38},"end":{"line":187,"column":1}},"line":166},"6":{"name":"decodeKeyValue","decl":{"start":{"line":195,"column":9},"end":{"line":195,"column":23}},"loc":{"start":{"line":195,"column":56},"end":{"line":236,"column":1}},"line":195},"7":{"name":"decodeKey","decl":{"start":{"line":244,"column":9},"end":{"line":244,"column":18}},"loc":{"start":{"line":244,"column":34},"end":{"line":279,"column":1}},"line":244},"8":{"name":"(anonymous_8)","decl":{"start":{"line":247,"column":40},"end":{"line":247,"column":41}},"loc":{"start":{"line":247,"column":47},"end":{"line":247,"column":67}},"line":247},"9":{"name":"(anonymous_9)","decl":{"start":{"line":256,"column":43},"end":{"line":256,"column":44}},"loc":{"start":{"line":256,"column":50},"end":{"line":256,"column":73}},"line":256},"10":{"name":"(anonymous_10)","decl":{"start":{"line":266,"column":40},"end":{"line":266,"column":41}},"loc":{"start":{"line":266,"column":47},"end":{"line":266,"column":67}},"line":266},"11":{"name":"decodeAllData","decl":{"start":{"line":287,"column":9},"end":{"line":287,"column":22}},"loc":{"start":{"line":287,"column":38},"end":{"line":297,"column":1}},"line":287},"12":{"name":"getSchemaElement","decl":{"start":{"line":305,"column":9},"end":{"line":305,"column":25}},"loc":{"start":{"line":305,"column":40},"end":{"line":312,"column":1}},"line":305},"13":{"name":"(anonymous_13)","decl":{"start":{"line":307,"column":39},"end":{"line":307,"column":40}},"loc":{"start":{"line":307,"column":46},"end":{"line":307,"column":63}},"line":307},"14":{"name":"hashData","decl":{"start":{"line":314,"column":9},"end":{"line":314,"column":17}},"loc":{"start":{"line":314,"column":38},"end":{"line":325,"column":1}},"line":314}},"branchMap":{"0":{"loc":{"start":{"line":32,"column":4},"end":{"line":36,"column":5}},"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":36,"column":5}},{"start":{"line":32,"column":4},"end":{"line":36,"column":5}}],"line":32},"1":{"loc":{"start":{"line":32,"column":8},"end":{"line":33,"column":66}},"type":"binary-expr","locations":[{"start":{"line":32,"column":8},"end":{"line":32,"column":80}},{"start":{"line":33,"column":8},"end":{"line":33,"column":66}}],"line":32},"2":{"loc":{"start":{"line":38,"column":25},"end":{"line":40,"column":60}},"type":"binary-expr","locations":[{"start":{"line":38,"column":25},"end":{"line":38,"column":96}},{"start":{"line":39,"column":8},"end":{"line":40,"column":60}}],"line":38},"3":{"loc":{"start":{"line":43,"column":4},"end":{"line":59,"column":5}},"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":59,"column":5}},{"start":{"line":43,"column":4},"end":{"line":59,"column":5}}],"line":43},"4":{"loc":{"start":{"line":43,"column":8},"end":{"line":43,"column":45}},"type":"binary-expr","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":28}},{"start":{"line":43,"column":32},"end":{"line":43,"column":45}}],"line":43},"5":{"loc":{"start":{"line":53,"column":9},"end":{"line":59,"column":5}},"type":"if","locations":[{"start":{"line":53,"column":9},"end":{"line":59,"column":5}},{"start":{"line":53,"column":9},"end":{"line":59,"column":5}}],"line":53},"6":{"loc":{"start":{"line":57,"column":9},"end":{"line":59,"column":5}},"type":"if","locations":[{"start":{"line":57,"column":9},"end":{"line":59,"column":5}},{"start":{"line":57,"column":9},"end":{"line":59,"column":5}}],"line":57},"7":{"loc":{"start":{"line":60,"column":4},"end":{"line":69,"column":5}},"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":69,"column":5}},{"start":{"line":60,"column":4},"end":{"line":69,"column":5}}],"line":60},"8":{"loc":{"start":{"line":62,"column":4},"end":{"line":64,"column":21}},"type":"binary-expr","locations":[{"start":{"line":62,"column":4},"end":{"line":62,"column":49}},{"start":{"line":64,"column":8},"end":{"line":64,"column":21}}],"line":62},"9":{"loc":{"start":{"line":67,"column":9},"end":{"line":69,"column":5}},"type":"if","locations":[{"start":{"line":67,"column":9},"end":{"line":69,"column":5}},{"start":{"line":67,"column":9},"end":{"line":69,"column":5}}],"line":67},"10":{"loc":{"start":{"line":67,"column":13},"end":{"line":67,"column":36}},"type":"binary-expr","locations":[{"start":{"line":67,"column":13},"end":{"line":67,"column":20}},{"start":{"line":67,"column":24},"end":{"line":67,"column":36}}],"line":67},"11":{"loc":{"start":{"line":93,"column":11},"end":{"line":96,"column":38}},"type":"cond-expr","locations":[{"start":{"line":94,"column":10},"end":{"line":95,"column":97}},{"start":{"line":96,"column":10},"end":{"line":96,"column":38}}],"line":93},"12":{"loc":{"start":{"line":107,"column":4},"end":{"line":109,"column":5}},"type":"if","locations":[{"start":{"line":107,"column":4},"end":{"line":109,"column":5}},{"start":{"line":107,"column":4},"end":{"line":109,"column":5}}],"line":107},"13":{"loc":{"start":{"line":130,"column":4},"end":{"line":149,"column":5}},"type":"if","locations":[{"start":{"line":130,"column":4},"end":{"line":149,"column":5}},{"start":{"line":130,"column":4},"end":{"line":149,"column":5}}],"line":130},"14":{"loc":{"start":{"line":130,"column":8},"end":{"line":130,"column":72}},"type":"binary-expr","locations":[{"start":{"line":130,"column":8},"end":{"line":130,"column":48}},{"start":{"line":130,"column":52},"end":{"line":130,"column":72}}],"line":130},"15":{"loc":{"start":{"line":134,"column":12},"end":{"line":141,"column":13}},"type":"if","locations":[{"start":{"line":134,"column":12},"end":{"line":141,"column":13}},{"start":{"line":134,"column":12},"end":{"line":141,"column":13}}],"line":134},"16":{"loc":{"start":{"line":150,"column":4},"end":{"line":153,"column":5}},"type":"if","locations":[{"start":{"line":150,"column":4},"end":{"line":153,"column":5}},{"start":{"line":150,"column":4},"end":{"line":153,"column":5}}],"line":150},"17":{"loc":{"start":{"line":150,"column":8},"end":{"line":151,"column":50}},"type":"binary-expr","locations":[{"start":{"line":150,"column":8},"end":{"line":150,"column":52}},{"start":{"line":151,"column":8},"end":{"line":151,"column":50}}],"line":150},"18":{"loc":{"start":{"line":172,"column":8},"end":{"line":184,"column":9}},"type":"if","locations":[{"start":{"line":172,"column":8},"end":{"line":184,"column":9}},{"start":{"line":172,"column":8},"end":{"line":184,"column":9}}],"line":172},"19":{"loc":{"start":{"line":173,"column":12},"end":{"line":183,"column":13}},"type":"if","locations":[{"start":{"line":173,"column":12},"end":{"line":183,"column":13}},{"start":{"line":173,"column":12},"end":{"line":183,"column":13}}],"line":173},"20":{"loc":{"start":{"line":197,"column":4},"end":{"line":204,"column":5}},"type":"if","locations":[{"start":{"line":197,"column":4},"end":{"line":204,"column":5}},{"start":{"line":197,"column":4},"end":{"line":204,"column":5}}],"line":197},"21":{"loc":{"start":{"line":197,"column":8},"end":{"line":198,"column":66}},"type":"binary-expr","locations":[{"start":{"line":197,"column":8},"end":{"line":197,"column":80}},{"start":{"line":198,"column":8},"end":{"line":198,"column":66}}],"line":197},"22":{"loc":{"start":{"line":205,"column":23},"end":{"line":207,"column":60}},"type":"binary-expr","locations":[{"start":{"line":205,"column":23},"end":{"line":205,"column":94}},{"start":{"line":206,"column":8},"end":{"line":207,"column":60}}],"line":205},"23":{"loc":{"start":{"line":210,"column":4},"end":{"line":216,"column":5}},"type":"if","locations":[{"start":{"line":210,"column":4},"end":{"line":216,"column":5}},{"start":{"line":210,"column":4},"end":{"line":216,"column":5}}],"line":210},"24":{"loc":{"start":{"line":210,"column":8},"end":{"line":212,"column":38}},"type":"binary-expr","locations":[{"start":{"line":210,"column":8},"end":{"line":210,"column":53}},{"start":{"line":211,"column":8},"end":{"line":211,"column":54}},{"start":{"line":212,"column":8},"end":{"line":212,"column":38}}],"line":210},"25":{"loc":{"start":{"line":218,"column":4},"end":{"line":220,"column":5}},"type":"if","locations":[{"start":{"line":218,"column":4},"end":{"line":220,"column":5}},{"start":{"line":218,"column":4},"end":{"line":220,"column":5}}],"line":218},"26":{"loc":{"start":{"line":218,"column":8},"end":{"line":218,"column":98}},"type":"binary-expr","locations":[{"start":{"line":218,"column":8},"end":{"line":218,"column":20}},{"start":{"line":218,"column":24},"end":{"line":218,"column":53}},{"start":{"line":218,"column":57},"end":{"line":218,"column":98}}],"line":218},"27":{"loc":{"start":{"line":221,"column":4},"end":{"line":223,"column":5}},"type":"if","locations":[{"start":{"line":221,"column":4},"end":{"line":223,"column":5}},{"start":{"line":221,"column":4},"end":{"line":223,"column":5}}],"line":221},"28":{"loc":{"start":{"line":221,"column":8},"end":{"line":221,"column":70}},"type":"binary-expr","locations":[{"start":{"line":221,"column":8},"end":{"line":221,"column":20}},{"start":{"line":221,"column":24},"end":{"line":221,"column":70}}],"line":221},"29":{"loc":{"start":{"line":226,"column":4},"end":{"line":234,"column":5}},"type":"if","locations":[{"start":{"line":226,"column":4},"end":{"line":234,"column":5}},{"start":{"line":226,"column":4},"end":{"line":234,"column":5}}],"line":226},"30":{"loc":{"start":{"line":226,"column":8},"end":{"line":226,"column":39}},"type":"binary-expr","locations":[{"start":{"line":226,"column":8},"end":{"line":226,"column":15}},{"start":{"line":226,"column":19},"end":{"line":226,"column":39}}],"line":226},"31":{"loc":{"start":{"line":245,"column":4},"end":{"line":262,"column":5}},"type":"if","locations":[{"start":{"line":245,"column":4},"end":{"line":262,"column":5}},{"start":{"line":245,"column":4},"end":{"line":262,"column":5}}],"line":245},"32":{"loc":{"start":{"line":249,"column":8},"end":{"line":251,"column":9}},"type":"if","locations":[{"start":{"line":249,"column":8},"end":{"line":251,"column":9}},{"start":{"line":249,"column":8},"end":{"line":251,"column":9}}],"line":249},"33":{"loc":{"start":{"line":252,"column":28},"end":{"line":252,"column":75}},"type":"binary-expr","locations":[{"start":{"line":252,"column":28},"end":{"line":252,"column":70}},{"start":{"line":252,"column":74},"end":{"line":252,"column":75}}],"line":252},"34":{"loc":{"start":{"line":257,"column":12},"end":{"line":259,"column":13}},"type":"if","locations":[{"start":{"line":257,"column":12},"end":{"line":259,"column":13}},{"start":{"line":257,"column":12},"end":{"line":259,"column":13}}],"line":257},"35":{"loc":{"start":{"line":263,"column":4},"end":{"line":274,"column":5}},"type":"if","locations":[{"start":{"line":263,"column":4},"end":{"line":274,"column":5}},{"start":{"line":263,"column":4},"end":{"line":274,"column":5}}],"line":263},"36":{"loc":{"start":{"line":263,"column":8},"end":{"line":264,"column":50}},"type":"binary-expr","locations":[{"start":{"line":263,"column":8},"end":{"line":263,"column":52}},{"start":{"line":264,"column":8},"end":{"line":264,"column":50}}],"line":263},"37":{"loc":{"start":{"line":265,"column":8},"end":{"line":272,"column":9}},"type":"if","locations":[{"start":{"line":265,"column":8},"end":{"line":272,"column":9}},{"start":{"line":265,"column":8},"end":{"line":272,"column":9}}],"line":265},"38":{"loc":{"start":{"line":268,"column":12},"end":{"line":270,"column":13}},"type":"if","locations":[{"start":{"line":268,"column":12},"end":{"line":270,"column":13}},{"start":{"line":268,"column":12},"end":{"line":270,"column":13}}],"line":268},"39":{"loc":{"start":{"line":292,"column":8},"end":{"line":294,"column":9}},"type":"if","locations":[{"start":{"line":292,"column":8},"end":{"line":294,"column":9}},{"start":{"line":292,"column":8},"end":{"line":294,"column":9}}],"line":292},"40":{"loc":{"start":{"line":306,"column":20},"end":{"line":306,"column":72}},"type":"cond-expr","locations":[{"start":{"line":306,"column":48},"end":{"line":306,"column":66}},{"start":{"line":306,"column":69},"end":{"line":306,"column":72}}],"line":306},"41":{"loc":{"start":{"line":308,"column":4},"end":{"line":310,"column":5}},"type":"if","locations":[{"start":{"line":308,"column":4},"end":{"line":310,"column":5}},{"start":{"line":308,"column":4},"end":{"line":310,"column":5}}],"line":308},"42":{"loc":{"start":{"line":315,"column":4},"end":{"line":324,"column":5}},"type":"switch","locations":[{"start":{"line":316,"column":8},"end":{"line":316,"column":31}},{"start":{"line":317,"column":8},"end":{"line":318,"column":64}},{"start":{"line":319,"column":8},"end":{"line":319,"column":32}},{"start":{"line":320,"column":8},"end":{"line":321,"column":48}},{"start":{"line":322,"column":8},"end":{"line":323,"column":100}}],"line":315}},"s":{"0":1,"1":1,"2":1,"3":1,"4":118,"5":0,"6":118,"7":118,"8":118,"9":4,"10":4,"11":4,"12":8,"13":8,"14":4,"15":114,"16":94,"17":20,"18":20,"19":118,"20":8,"21":110,"22":20,"23":118,"24":1,"25":150,"26":1,"27":50,"28":50,"29":1,"30":84,"31":0,"32":84,"33":1,"34":69,"35":12,"36":12,"37":12,"38":24,"39":24,"40":12,"41":24,"42":24,"43":12,"44":57,"45":57,"46":0,"47":0,"48":1,"49":2,"50":2,"51":2,"52":44,"53":44,"54":44,"55":44,"56":44,"57":6,"58":38,"59":2,"60":1,"61":298,"62":0,"63":298,"64":298,"65":298,"66":145,"67":298,"68":30,"69":298,"70":125,"71":173,"72":10,"73":10,"74":10,"75":20,"76":20,"77":10,"78":163,"79":1,"80":204,"81":30,"82":30,"83":201,"84":30,"85":0,"86":30,"87":30,"88":30,"89":60,"90":60,"91":606,"92":60,"93":60,"94":30,"95":174,"96":174,"97":95,"98":1313,"99":95,"100":0,"101":95,"102":79,"103":0,"104":0,"105":1,"106":5,"107":5,"108":5,"109":110,"110":110,"111":110,"112":110,"113":5,"114":1,"115":116,"116":116,"117":809,"118":116,"119":0,"120":116,"121":1,"122":4,"123":3,"124":1,"125":0,"126":1},"f":{"0":118,"1":150,"2":50,"3":84,"4":69,"5":2,"6":298,"7":204,"8":201,"9":606,"10":1313,"11":5,"12":116,"13":809,"14":4},"b":{"0":[0,118],"1":[118,8],"2":[118,110],"3":[4,114],"4":[118,24],"5":[94,20],"6":[20,0],"7":[8,110],"8":[118,76],"9":[20,90],"10":[110,20],"11":[2,48],"12":[0,84],"13":[12,57],"14":[69,12],"15":[12,12],"16":[57,0],"17":[57,3],"18":[44,0],"19":[6,38],"20":[0,298],"21":[298,20],"22":[298,278],"23":[145,153],"24":[298,195,175],"25":[30,268],"26":[298,175,30],"27":[125,173],"28":[298,145],"29":[10,163],"30":[173,10],"31":[30,174],"32":[0,30],"33":[30,0],"34":[60,0],"35":[174,0],"36":[174,9],"37":[95,79],"38":[0,95],"39":[110,0],"40":[50,66],"41":[0,116],"42":[3,3,1,1,0]},"inputSourceMap":{"version":3,"file":"/home/rryter/Projects/alliance-erc725.js/src/lib/utils.ts","sources":["/home/rryter/Projects/alliance-erc725.js/src/lib/utils.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n    This file is part of ERC725.js.\n    ERC725.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    ERC725.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file lib/utils.ts\n * @author Robert McLeod <@robertdavid010>, Fabian Vogelsteller <fabian@lukso.network>\n * @date 2020\n */\n\nimport {\n  checkAddressChecksum,\n  isAddress,\n  keccak256,\n  leftPad,\n  numberToHex,\n  padLeft,\n} from 'web3-utils';\nimport { Erc725Schema } from '../types/Erc725Schema';\n\nimport {\n  decodeValueContent,\n  decodeValueType,\n  encodeValueContent,\n  encodeValueType,\n  valueContentEncodingMap as valueContentMap,\n} from './encoder';\n\ntype Erc725ObjectSchema = Pick<\n  Erc725Schema,\n  'key' | 'keyType' | 'valueContent' | 'valueType' | 'name'\n>;\n\n/**\n *\n * @param schemaElementDefinition An object of the schema for this key\n * @param value can contain single value, or an object as required by schema (JSONURL, or ASSETURL)\n * @return the encoded value as per the schema\n */\nexport function encodeKeyValue(\n  schemaElementDefinition: Erc725ObjectSchema,\n  value: string,\n) {\n  // Check if existing in the supported valueContent mapping.\n  if (\n    !valueContentMap[schemaElementDefinition.valueContent] &&\n    schemaElementDefinition.valueContent.substr(0, 2) !== '0x'\n  ) {\n    throw new Error(\n      `The valueContent '${schemaElementDefinition.valueContent} \n            for ${schemaElementDefinition.name} is not supported.`,\n    );\n  }\n\n  let result;\n  const sameEncoding =\n    valueContentMap[schemaElementDefinition.valueContent] &&\n    valueContentMap[schemaElementDefinition.valueContent].type ===\n      schemaElementDefinition.valueType.split('[]')[0];\n  const isArray =\n    schemaElementDefinition.valueType.substr(\n      schemaElementDefinition.valueType.length - 2,\n    ) === '[]';\n\n  // We only loop if the valueType done by abi.encodeParameter can not handle it directly\n  if (Array.isArray(value) && !sameEncoding) {\n    // value type encoding will handle it?\n\n    // we handle an array element encoding\n    const results: (string | false)[] = [];\n    for (let index = 0; index < value.length; index++) {\n      const element = value[index];\n      results.push(\n        encodeValueContent(schemaElementDefinition.valueContent, element),\n      );\n    }\n    result = results;\n  } else if (!isArray) {\n    // Straight forward encode\n    result = encodeValueContent(schemaElementDefinition.valueContent, value);\n  } else if (sameEncoding) {\n    result = value; // leaving this for below\n  }\n\n  if (\n    // and we only skip bytes regardless\n    schemaElementDefinition.valueType !== 'bytes' &&\n    // Requires encoding because !sameEncoding means both encodings are required\n    !sameEncoding\n  ) {\n    result = encodeValueType(schemaElementDefinition.valueType, result);\n  } else if (isArray && sameEncoding) {\n    result = encodeValueType(schemaElementDefinition.valueType, result);\n  }\n\n  return result;\n}\n\n/**\n *\n * @param key The schema key of a schema with keyType = 'Array'\n * @param index An integer representing the intended array index\n * @return The raw bytes key for the array element\n */\n// eslint-disable-next-line arrow-body-style\nexport function encodeArrayKey(key: string, index: number) {\n  return key.substr(0, 34) + padLeft(numberToHex(index), 32).replace('0x', '');\n}\n\n/**\n *\n * @param name the schema element name\n * @return the name of the key encoded as per specifications\n * @return a string of the encoded schema name\n */\nexport function encodeKeyName(name: string) {\n  const colon = name.indexOf(':');\n  // if name:subname, then construct using bytes16(hashFirstWord) + bytes12(0) + bytes4(hashLastWord)\n  return colon !== -1\n    ? keccak256(name.substr(0, colon)).substr(0, 34) +\n        leftPad(keccak256(name.substr(colon + 1)).substr(2, 8), 32)\n    : keccak256(name); // otherwise just bytes32(hash)\n}\n\n/**\n *\n * @param schema An object of a schema definition that must have a keyType of 'Array'\n * @param index The index of the array element to transpose the schema to\n * @return Modified schema element of keyType 'Singleton' for fetching or decoding/encoding the array element\n */\nexport function transposeArraySchema(\n  schema: Erc725Schema,\n  index: number,\n): Erc725ObjectSchema {\n  // Use enum Erc725SchemaKeyType instead?\n  if (schema.keyType.toLowerCase() !== 'array') {\n    console.error(\n      'Schema is not of keyType \"Array\" for schema: \"' + schema.name + '\".',\n    );\n  }\n\n  return {\n    name: schema.name,\n    key: encodeArrayKey(schema.key, index),\n    keyType: 'Singleton',\n    // TODO: This can be solved by defining an extra \"Erc725ArraySchema\" for array\n    // @ts-ignore\n    valueContent: schema.elementValueContent,\n    // @ts-ignore\n    valueType: schema.elementValueType,\n  };\n}\n\n/**\n *\n * @param schema is an object of a schema definitions\n * @param value will be either key-value pairs for a key type of Array, or a single value for type Singleton\n * @return the encoded value for the key as per the supplied schema\n */\nexport function encodeKey(schema: Erc725Schema, value) {\n  // NOTE: This will not guarantee order of array as on chain. Assumes developer must set correct order\n  if (schema.keyType.toLowerCase() === 'array' && Array.isArray(value)) {\n    const results: { key: string; value: string }[] = [];\n\n    for (let index = 0; index < value.length; index++) {\n      const dataElement = value[index];\n      if (index === 0) {\n        // This is arrayLength as the first element in the raw array\n        results.push({\n          key: schema.key,\n          // @ts-ignore\n          value: encodeKeyValue(schema, value.length), // the array length\n        });\n      }\n\n      const newSchema = transposeArraySchema(schema, index);\n      results.push({\n        key: newSchema.key,\n        value: encodeKeyValue(newSchema, dataElement),\n      });\n    }\n\n    return results;\n  }\n\n  if (\n    schema.keyType.toLowerCase() === 'singleton' ||\n    schema.keyType.toLowerCase() === 'mapping'\n  ) {\n    return encodeKeyValue(schema, value);\n  }\n\n  console.error(\n    'Incorrect data match or keyType in schema from encodeKey(): \"' +\n      schema.keyType +\n      '\"',\n  );\n  return null;\n}\n\n/**\n *\n * @param schemas schemas is an array of objects of schema definitions\n * @param data data is an array of objects of key-value pairs\n * @return: all encoded data as per required by the schema and provided data\n */\nexport function encodeAllData(schemas: Erc725Schema[], data) {\n  const results: { key: string; value: string }[] = [];\n\n  for (let index = 0; index < schemas.length; index++) {\n    const schemaElement = schemas[index];\n    const filteredData = data[schemaElement.name];\n\n    const res = encodeKey(schemaElement, filteredData);\n    if (res) {\n      if (schemaElement.keyType === 'Array') {\n        // Encoded array element returns as key-value pairs\n        results.push(...res);\n      } else {\n        // Singleton encoding returns just the value, so we add the key for key-value pair\n        results.push({\n          key: schemaElement.key,\n          value: res,\n        });\n      }\n    }\n  }\n\n  return results;\n}\n\n/**\n *\n * @param schemaElementDefinition An object of the schema for this key\n * @param value the value to decode\n * @return the decoded value as per the schema\n */\nexport function decodeKeyValue(schemaElementDefinition, value) {\n  // Check for the missing map.\n  if (\n    !valueContentMap[schemaElementDefinition.valueContent] &&\n    schemaElementDefinition.valueContent.substr(0, 2) !== '0x'\n  ) {\n    throw new Error(\n      'The valueContent \"' +\n        schemaElementDefinition.valueContent +\n        '\" for \"' +\n        schemaElementDefinition.name +\n        '\" is not supported.',\n    );\n  }\n\n  let sameEncoding =\n    valueContentMap[schemaElementDefinition.valueContent] &&\n    valueContentMap[schemaElementDefinition.valueContent].type ===\n      schemaElementDefinition.valueType.split('[]')[0];\n  const isArray =\n    schemaElementDefinition.valueType.substr(\n      schemaElementDefinition.valueType.length - 2,\n    ) === '[]';\n\n  // VALUE TYPE\n  if (\n    schemaElementDefinition.valueType !== 'bytes' && // we ignore because all is decoded by bytes to start with (abi)\n    schemaElementDefinition.valueType !== 'string' &&\n    !isAddress(value) // checks for addresses, since technically an address is bytes?\n  ) {\n    // eslint-disable-next-line no-param-reassign\n    value = decodeValueType(schemaElementDefinition.valueType, value);\n  }\n\n  // As per exception above, if address and sameEncoding, then the address still needs to be handled\n  if (sameEncoding && isAddress(value) && !checkAddressChecksum(value)) {\n    sameEncoding = !sameEncoding;\n  }\n\n  if (sameEncoding && schemaElementDefinition.valueType !== 'string') {\n    return value;\n  }\n\n  // VALUE CONTENT\n  // We are finished if duplicated encoding methods\n\n  if (isArray && Array.isArray(value)) {\n    // value must be an array also\n    const results: (string | false)[] = [];\n\n    for (let index = 0; index < value.length; index++) {\n      const element = value[index];\n      results.push(\n        decodeValueContent(schemaElementDefinition.valueContent, element),\n      );\n    }\n\n    return results;\n  }\n\n  return decodeValueContent(schemaElementDefinition.valueContent, value);\n}\n\n/**\n *\n * @param schema is an object of a schema definitions\n * @param value will be either key-value pairs for a key type of Array, or a single value for type Singleton\n * @return the decoded value/values as per the schema definition\n */\nexport function decodeKey(schema: Erc725Schema, value) {\n  if (schema.keyType.toLowerCase() === 'array') {\n    const results: any[] = [];\n    const valueElement = value.find((e) => e.key === schema.key);\n    // Handle empty/non-existent array\n    if (!valueElement) {\n      return results;\n    }\n\n    const arrayLength = decodeKeyValue(schema, valueElement.value) || 0;\n\n    // This will not run if no match or arrayLength\n    for (let index = 0; index < arrayLength; index++) {\n      const newSchema = transposeArraySchema(schema, index);\n      const dataElement = value.find((e) => e.key === newSchema.key);\n\n      if (dataElement) {\n        results.push(decodeKeyValue(newSchema, dataElement.value));\n      }\n    } // end for loop\n\n    return results;\n  }\n\n  if (\n    schema.keyType.toLowerCase() === 'singleton' ||\n    schema.keyType.toLowerCase() === 'mapping'\n  ) {\n    if (Array.isArray(value)) {\n      const newValue = value.find((e) => e.key === schema.key);\n\n      // Handle empty or non-values\n      if (!newValue) {\n        return null;\n      }\n\n      return decodeKeyValue(schema, newValue.value);\n    }\n\n    return decodeKeyValue(schema, value);\n  }\n\n  console.error(\n    'Incorrect data match or keyType in schema from decodeKey(): \"' +\n      schema.keyType +\n      '\"',\n  );\n  return null;\n}\n\n/**\n *\n * @param schemas schemas is an array of objects of schema definitions\n * @param data data is an array of objects of key-value pairs\n * @return: all decoded data as per required by the schema and provided data\n */\nexport function decodeAllData(schemas: Erc725Schema[], data) {\n  const results = {};\n\n  for (let index = 0; index < schemas.length; index++) {\n    const schemaElement = schemas[index];\n\n    const res = decodeKey(schemaElement, data);\n    if (res) {\n      results[schemaElement.name] = res;\n    }\n  }\n\n  return results;\n}\n\n/**\n *\n * @param schemas An array of objects\n * @param {string} key A string of either the schema element name, or key\n * @return The requested schema element from the full array of schemas\n */\nexport function getSchemaElement(schemas: Erc725Schema[], key: string) {\n  const keyHash = key.substr(0, 2) !== '0x' ? encodeKeyName(key) : key;\n  const schemaElement = schemas.find((e) => e.key === keyHash);\n  if (!schemaElement) {\n    throw new Error(\n      'No matching schema found for key: \"' + key + '\" (' + keyHash + ').',\n    );\n  }\n\n  return schemaElement;\n}\n\nexport function hashData(data: unknown, hashFunction: string): string {\n  switch (hashFunction.toLowerCase()) {\n    case 'keccak256(utf8)':\n    case '0x6f357c6a':\n      return keccak256(JSON.stringify(data));\n\n    case 'keccak256(bytes)':\n    case '0x8019f9b1':\n      return keccak256(data);\n\n    default:\n      throw new Error(\n        `Chosen hashFunction '${hashFunction.toLowerCase()}' is not supported`,\n      );\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"aecfa082af1a7e22dac4937dc2c8cbf9f0b173e3","contentHash":"450056281569e6973e7a6e01f5b2602f8e7a02dcb6b594e871e9756942062bb1"},"/home/rryter/Projects/alliance-erc725.js/src/lib/encoder.ts":{"path":"/home/rryter/Projects/alliance-erc725.js/src/lib/encoder.ts","statementMap":{"0":{"start":{"line":20,"column":22},"end":{"line":22,"column":1}},"1":{"start":{"line":21,"column":4},"end":{"line":21,"column":62}},"2":{"start":{"line":23,"column":0},"end":{"line":23,"column":62}},"3":{"start":{"line":24,"column":0},"end":{"line":24,"column":151}},"4":{"start":{"line":28,"column":23},"end":{"line":28,"column":63}},"5":{"start":{"line":29,"column":21},"end":{"line":29,"column":42}},"6":{"start":{"line":30,"column":20},"end":{"line":30,"column":42}},"7":{"start":{"line":31,"column":16},"end":{"line":31,"column":34}},"8":{"start":{"line":32,"column":33},"end":{"line":42,"column":1}},"9":{"start":{"line":33,"column":26},"end":{"line":33,"column":48}},"10":{"start":{"line":34,"column":25},"end":{"line":34,"column":146}},"11":{"start":{"line":34,"column":80},"end":{"line":34,"column":145}},"12":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"13":{"start":{"line":36,"column":8},"end":{"line":36,"column":87}},"14":{"start":{"line":39,"column":4},"end":{"line":41,"column":62}},"15":{"start":{"line":43,"column":33},"end":{"line":52,"column":1}},"16":{"start":{"line":44,"column":28},"end":{"line":44,"column":47}},"17":{"start":{"line":45,"column":25},"end":{"line":45,"column":99}},"18":{"start":{"line":45,"column":73},"end":{"line":45,"column":98}},"19":{"start":{"line":46,"column":24},"end":{"line":46,"column":57}},"20":{"start":{"line":47,"column":21},"end":{"line":47,"column":53}},"21":{"start":{"line":48,"column":23},"end":{"line":48,"column":76}},"22":{"start":{"line":49,"column":4},"end":{"line":51,"column":15}},"23":{"start":{"line":53,"column":29},"end":{"line":115,"column":1}},"24":{"start":{"line":56,"column":27},"end":{"line":56,"column":82}},"25":{"start":{"line":58,"column":27},"end":{"line":58,"column":82}},"26":{"start":{"line":62,"column":27},"end":{"line":62,"column":83}},"27":{"start":{"line":64,"column":27},"end":{"line":64,"column":83}},"28":{"start":{"line":69,"column":27},"end":{"line":69,"column":83}},"29":{"start":{"line":71,"column":27},"end":{"line":71,"column":83}},"30":{"start":{"line":75,"column":27},"end":{"line":75,"column":83}},"31":{"start":{"line":77,"column":27},"end":{"line":77,"column":83}},"32":{"start":{"line":81,"column":27},"end":{"line":81,"column":81}},"33":{"start":{"line":83,"column":27},"end":{"line":83,"column":81}},"34":{"start":{"line":87,"column":27},"end":{"line":87,"column":84}},"35":{"start":{"line":89,"column":27},"end":{"line":89,"column":84}},"36":{"start":{"line":93,"column":27},"end":{"line":93,"column":85}},"37":{"start":{"line":95,"column":27},"end":{"line":95,"column":85}},"38":{"start":{"line":99,"column":27},"end":{"line":99,"column":85}},"39":{"start":{"line":101,"column":27},"end":{"line":101,"column":85}},"40":{"start":{"line":105,"column":27},"end":{"line":105,"column":85}},"41":{"start":{"line":107,"column":27},"end":{"line":107,"column":85}},"42":{"start":{"line":111,"column":27},"end":{"line":111,"column":83}},"43":{"start":{"line":113,"column":27},"end":{"line":113,"column":83}},"44":{"start":{"line":118,"column":0},"end":{"line":211,"column":2}},"45":{"start":{"line":121,"column":27},"end":{"line":121,"column":32}},"46":{"start":{"line":122,"column":27},"end":{"line":122,"column":32}},"47":{"start":{"line":127,"column":27},"end":{"line":127,"column":84}},"48":{"start":{"line":128,"column":27},"end":{"line":128,"column":58}},"49":{"start":{"line":135,"column":12},"end":{"line":141,"column":13}},"50":{"start":{"line":137,"column":16},"end":{"line":137,"column":44}},"51":{"start":{"line":140,"column":16},"end":{"line":140,"column":39}},"52":{"start":{"line":142,"column":12},"end":{"line":142,"column":77}},"53":{"start":{"line":144,"column":27},"end":{"line":144,"column":63}},"54":{"start":{"line":150,"column":12},"end":{"line":152,"column":13}},"55":{"start":{"line":151,"column":16},"end":{"line":151,"column":43}},"56":{"start":{"line":153,"column":12},"end":{"line":153,"column":79}},"57":{"start":{"line":155,"column":27},"end":{"line":155,"column":64}},"58":{"start":{"line":159,"column":27},"end":{"line":159,"column":56}},"59":{"start":{"line":160,"column":27},"end":{"line":160,"column":56}},"60":{"start":{"line":164,"column":27},"end":{"line":164,"column":56}},"61":{"start":{"line":165,"column":27},"end":{"line":165,"column":56}},"62":{"start":{"line":169,"column":27},"end":{"line":169,"column":56}},"63":{"start":{"line":170,"column":27},"end":{"line":170,"column":56}},"64":{"start":{"line":174,"column":27},"end":{"line":174,"column":94}},"65":{"start":{"line":176,"column":27},"end":{"line":176,"column":58}},"66":{"start":{"line":177,"column":12},"end":{"line":183,"column":23}},"67":{"start":{"line":190,"column":54},"end":{"line":190,"column":59}},"68":{"start":{"line":191,"column":29},"end":{"line":191,"column":33}},"69":{"start":{"line":192,"column":12},"end":{"line":194,"column":13}},"70":{"start":{"line":193,"column":16},"end":{"line":193,"column":66}},"71":{"start":{"line":195,"column":12},"end":{"line":197,"column":13}},"72":{"start":{"line":196,"column":16},"end":{"line":196,"column":113}},"73":{"start":{"line":198,"column":12},"end":{"line":198,"column":75}},"74":{"start":{"line":201,"column":27},"end":{"line":201,"column":58}},"75":{"start":{"line":202,"column":12},"end":{"line":208,"column":23}},"76":{"start":{"line":213,"column":4},"end":{"line":215,"column":5}},"77":{"start":{"line":214,"column":8},"end":{"line":214,"column":71}},"78":{"start":{"line":216,"column":4},"end":{"line":216,"column":68}},"79":{"start":{"line":218,"column":0},"end":{"line":218,"column":42}},"80":{"start":{"line":220,"column":4},"end":{"line":222,"column":5}},"81":{"start":{"line":221,"column":8},"end":{"line":221,"column":71}},"82":{"start":{"line":223,"column":4},"end":{"line":224,"column":20}},"83":{"start":{"line":224,"column":8},"end":{"line":224,"column":20}},"84":{"start":{"line":225,"column":4},"end":{"line":225,"column":68}},"85":{"start":{"line":227,"column":0},"end":{"line":227,"column":42}},"86":{"start":{"line":229,"column":4},"end":{"line":234,"column":5}},"87":{"start":{"line":230,"column":8},"end":{"line":230,"column":74}},"88":{"start":{"line":232,"column":9},"end":{"line":234,"column":5}},"89":{"start":{"line":233,"column":8},"end":{"line":233,"column":46}},"90":{"start":{"line":235,"column":4},"end":{"line":235,"column":78}},"91":{"start":{"line":237,"column":0},"end":{"line":237,"column":48}},"92":{"start":{"line":239,"column":4},"end":{"line":244,"column":5}},"93":{"start":{"line":240,"column":8},"end":{"line":240,"column":74}},"94":{"start":{"line":242,"column":9},"end":{"line":244,"column":5}},"95":{"start":{"line":243,"column":8},"end":{"line":243,"column":46}},"96":{"start":{"line":245,"column":4},"end":{"line":245,"column":79}},"97":{"start":{"line":247,"column":0},"end":{"line":247,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":20,"column":56},"end":{"line":20,"column":57}},"loc":{"start":{"line":20,"column":71},"end":{"line":22,"column":1}},"line":20},"1":{"name":"(anonymous_1)","decl":{"start":{"line":32,"column":33},"end":{"line":32,"column":34}},"loc":{"start":{"line":32,"column":69},"end":{"line":42,"column":1}},"line":32},"2":{"name":"(anonymous_2)","decl":{"start":{"line":34,"column":66},"end":{"line":34,"column":67}},"loc":{"start":{"line":34,"column":80},"end":{"line":34,"column":145}},"line":34},"3":{"name":"(anonymous_3)","decl":{"start":{"line":43,"column":33},"end":{"line":43,"column":34}},"loc":{"start":{"line":43,"column":44},"end":{"line":52,"column":1}},"line":43},"4":{"name":"(anonymous_4)","decl":{"start":{"line":45,"column":66},"end":{"line":45,"column":67}},"loc":{"start":{"line":45,"column":73},"end":{"line":45,"column":98}},"line":45},"5":{"name":"(anonymous_5)","decl":{"start":{"line":56,"column":16},"end":{"line":56,"column":17}},"loc":{"start":{"line":56,"column":27},"end":{"line":56,"column":82}},"line":56},"6":{"name":"(anonymous_6)","decl":{"start":{"line":58,"column":16},"end":{"line":58,"column":17}},"loc":{"start":{"line":58,"column":27},"end":{"line":58,"column":82}},"line":58},"7":{"name":"(anonymous_7)","decl":{"start":{"line":62,"column":16},"end":{"line":62,"column":17}},"loc":{"start":{"line":62,"column":27},"end":{"line":62,"column":83}},"line":62},"8":{"name":"(anonymous_8)","decl":{"start":{"line":64,"column":16},"end":{"line":64,"column":17}},"loc":{"start":{"line":64,"column":27},"end":{"line":64,"column":83}},"line":64},"9":{"name":"(anonymous_9)","decl":{"start":{"line":69,"column":16},"end":{"line":69,"column":17}},"loc":{"start":{"line":69,"column":27},"end":{"line":69,"column":83}},"line":69},"10":{"name":"(anonymous_10)","decl":{"start":{"line":71,"column":16},"end":{"line":71,"column":17}},"loc":{"start":{"line":71,"column":27},"end":{"line":71,"column":83}},"line":71},"11":{"name":"(anonymous_11)","decl":{"start":{"line":75,"column":16},"end":{"line":75,"column":17}},"loc":{"start":{"line":75,"column":27},"end":{"line":75,"column":83}},"line":75},"12":{"name":"(anonymous_12)","decl":{"start":{"line":77,"column":16},"end":{"line":77,"column":17}},"loc":{"start":{"line":77,"column":27},"end":{"line":77,"column":83}},"line":77},"13":{"name":"(anonymous_13)","decl":{"start":{"line":81,"column":16},"end":{"line":81,"column":17}},"loc":{"start":{"line":81,"column":27},"end":{"line":81,"column":81}},"line":81},"14":{"name":"(anonymous_14)","decl":{"start":{"line":83,"column":16},"end":{"line":83,"column":17}},"loc":{"start":{"line":83,"column":27},"end":{"line":83,"column":81}},"line":83},"15":{"name":"(anonymous_15)","decl":{"start":{"line":87,"column":16},"end":{"line":87,"column":17}},"loc":{"start":{"line":87,"column":27},"end":{"line":87,"column":84}},"line":87},"16":{"name":"(anonymous_16)","decl":{"start":{"line":89,"column":16},"end":{"line":89,"column":17}},"loc":{"start":{"line":89,"column":27},"end":{"line":89,"column":84}},"line":89},"17":{"name":"(anonymous_17)","decl":{"start":{"line":93,"column":16},"end":{"line":93,"column":17}},"loc":{"start":{"line":93,"column":27},"end":{"line":93,"column":85}},"line":93},"18":{"name":"(anonymous_18)","decl":{"start":{"line":95,"column":16},"end":{"line":95,"column":17}},"loc":{"start":{"line":95,"column":27},"end":{"line":95,"column":85}},"line":95},"19":{"name":"(anonymous_19)","decl":{"start":{"line":99,"column":16},"end":{"line":99,"column":17}},"loc":{"start":{"line":99,"column":27},"end":{"line":99,"column":85}},"line":99},"20":{"name":"(anonymous_20)","decl":{"start":{"line":101,"column":16},"end":{"line":101,"column":17}},"loc":{"start":{"line":101,"column":27},"end":{"line":101,"column":85}},"line":101},"21":{"name":"(anonymous_21)","decl":{"start":{"line":105,"column":16},"end":{"line":105,"column":17}},"loc":{"start":{"line":105,"column":27},"end":{"line":105,"column":85}},"line":105},"22":{"name":"(anonymous_22)","decl":{"start":{"line":107,"column":16},"end":{"line":107,"column":17}},"loc":{"start":{"line":107,"column":27},"end":{"line":107,"column":85}},"line":107},"23":{"name":"(anonymous_23)","decl":{"start":{"line":111,"column":16},"end":{"line":111,"column":17}},"loc":{"start":{"line":111,"column":27},"end":{"line":111,"column":83}},"line":111},"24":{"name":"(anonymous_24)","decl":{"start":{"line":113,"column":16},"end":{"line":113,"column":17}},"loc":{"start":{"line":113,"column":27},"end":{"line":113,"column":83}},"line":113},"25":{"name":"(anonymous_25)","decl":{"start":{"line":121,"column":16},"end":{"line":121,"column":17}},"loc":{"start":{"line":121,"column":27},"end":{"line":121,"column":32}},"line":121},"26":{"name":"(anonymous_26)","decl":{"start":{"line":122,"column":16},"end":{"line":122,"column":17}},"loc":{"start":{"line":122,"column":27},"end":{"line":122,"column":32}},"line":122},"27":{"name":"(anonymous_27)","decl":{"start":{"line":127,"column":16},"end":{"line":127,"column":17}},"loc":{"start":{"line":127,"column":27},"end":{"line":127,"column":84}},"line":127},"28":{"name":"(anonymous_28)","decl":{"start":{"line":128,"column":16},"end":{"line":128,"column":17}},"loc":{"start":{"line":128,"column":27},"end":{"line":128,"column":58}},"line":128},"29":{"name":"(anonymous_29)","decl":{"start":{"line":133,"column":16},"end":{"line":133,"column":17}},"loc":{"start":{"line":133,"column":27},"end":{"line":143,"column":9}},"line":133},"30":{"name":"(anonymous_30)","decl":{"start":{"line":144,"column":16},"end":{"line":144,"column":17}},"loc":{"start":{"line":144,"column":27},"end":{"line":144,"column":63}},"line":144},"31":{"name":"(anonymous_31)","decl":{"start":{"line":149,"column":16},"end":{"line":149,"column":17}},"loc":{"start":{"line":149,"column":27},"end":{"line":154,"column":9}},"line":149},"32":{"name":"(anonymous_32)","decl":{"start":{"line":155,"column":16},"end":{"line":155,"column":17}},"loc":{"start":{"line":155,"column":27},"end":{"line":155,"column":64}},"line":155},"33":{"name":"(anonymous_33)","decl":{"start":{"line":159,"column":16},"end":{"line":159,"column":17}},"loc":{"start":{"line":159,"column":27},"end":{"line":159,"column":56}},"line":159},"34":{"name":"(anonymous_34)","decl":{"start":{"line":160,"column":16},"end":{"line":160,"column":17}},"loc":{"start":{"line":160,"column":27},"end":{"line":160,"column":56}},"line":160},"35":{"name":"(anonymous_35)","decl":{"start":{"line":164,"column":16},"end":{"line":164,"column":17}},"loc":{"start":{"line":164,"column":27},"end":{"line":164,"column":56}},"line":164},"36":{"name":"(anonymous_36)","decl":{"start":{"line":165,"column":16},"end":{"line":165,"column":17}},"loc":{"start":{"line":165,"column":27},"end":{"line":165,"column":56}},"line":165},"37":{"name":"(anonymous_37)","decl":{"start":{"line":169,"column":16},"end":{"line":169,"column":17}},"loc":{"start":{"line":169,"column":27},"end":{"line":169,"column":56}},"line":169},"38":{"name":"(anonymous_38)","decl":{"start":{"line":170,"column":16},"end":{"line":170,"column":17}},"loc":{"start":{"line":170,"column":27},"end":{"line":170,"column":56}},"line":170},"39":{"name":"(anonymous_39)","decl":{"start":{"line":174,"column":16},"end":{"line":174,"column":17}},"loc":{"start":{"line":174,"column":27},"end":{"line":174,"column":94}},"line":174},"40":{"name":"(anonymous_40)","decl":{"start":{"line":175,"column":16},"end":{"line":175,"column":17}},"loc":{"start":{"line":175,"column":27},"end":{"line":184,"column":9}},"line":175},"41":{"name":"(anonymous_41)","decl":{"start":{"line":189,"column":16},"end":{"line":189,"column":17}},"loc":{"start":{"line":189,"column":27},"end":{"line":199,"column":9}},"line":189},"42":{"name":"(anonymous_42)","decl":{"start":{"line":200,"column":16},"end":{"line":200,"column":17}},"loc":{"start":{"line":200,"column":27},"end":{"line":209,"column":9}},"line":200},"43":{"name":"encodeValueType","decl":{"start":{"line":212,"column":9},"end":{"line":212,"column":24}},"loc":{"start":{"line":212,"column":38},"end":{"line":217,"column":1}},"line":212},"44":{"name":"decodeValueType","decl":{"start":{"line":219,"column":9},"end":{"line":219,"column":24}},"loc":{"start":{"line":219,"column":38},"end":{"line":226,"column":1}},"line":219},"45":{"name":"encodeValueContent","decl":{"start":{"line":228,"column":9},"end":{"line":228,"column":27}},"loc":{"start":{"line":228,"column":41},"end":{"line":236,"column":1}},"line":228},"46":{"name":"decodeValueContent","decl":{"start":{"line":238,"column":9},"end":{"line":238,"column":27}},"loc":{"start":{"line":238,"column":41},"end":{"line":246,"column":1}},"line":238}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":22},"end":{"line":22,"column":1}},"type":"binary-expr","locations":[{"start":{"line":20,"column":23},"end":{"line":20,"column":27}},{"start":{"line":20,"column":31},"end":{"line":20,"column":51}},{"start":{"line":20,"column":56},"end":{"line":22,"column":1}}],"line":20},"1":{"loc":{"start":{"line":21,"column":11},"end":{"line":21,"column":61}},"type":"cond-expr","locations":[{"start":{"line":21,"column":37},"end":{"line":21,"column":40}},{"start":{"line":21,"column":43},"end":{"line":21,"column":61}}],"line":21},"2":{"loc":{"start":{"line":21,"column":12},"end":{"line":21,"column":33}},"type":"binary-expr","locations":[{"start":{"line":21,"column":12},"end":{"line":21,"column":15}},{"start":{"line":21,"column":19},"end":{"line":21,"column":33}}],"line":21},"3":{"loc":{"start":{"line":34,"column":80},"end":{"line":34,"column":145}},"type":"binary-expr","locations":[{"start":{"line":34,"column":80},"end":{"line":34,"column":111}},{"start":{"line":34,"column":115},"end":{"line":34,"column":145}}],"line":34},"4":{"loc":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},{"start":{"line":35,"column":4},"end":{"line":37,"column":5}}],"line":35},"5":{"loc":{"start":{"line":49,"column":11},"end":{"line":51,"column":14}},"type":"cond-expr","locations":[{"start":{"line":50,"column":10},"end":{"line":50,"column":67}},{"start":{"line":51,"column":10},"end":{"line":51,"column":14}}],"line":49},"6":{"loc":{"start":{"line":150,"column":12},"end":{"line":152,"column":13}},"type":"if","locations":[{"start":{"line":150,"column":12},"end":{"line":152,"column":13}},{"start":{"line":150,"column":12},"end":{"line":152,"column":13}}],"line":150},"7":{"loc":{"start":{"line":177,"column":19},"end":{"line":183,"column":22}},"type":"cond-expr","locations":[{"start":{"line":178,"column":18},"end":{"line":182,"column":17}},{"start":{"line":183,"column":18},"end":{"line":183,"column":22}}],"line":177},"8":{"loc":{"start":{"line":192,"column":12},"end":{"line":194,"column":13}},"type":"if","locations":[{"start":{"line":192,"column":12},"end":{"line":194,"column":13}},{"start":{"line":192,"column":12},"end":{"line":194,"column":13}}],"line":192},"9":{"loc":{"start":{"line":195,"column":12},"end":{"line":197,"column":13}},"type":"if","locations":[{"start":{"line":195,"column":12},"end":{"line":197,"column":13}},{"start":{"line":195,"column":12},"end":{"line":197,"column":13}}],"line":195},"10":{"loc":{"start":{"line":202,"column":19},"end":{"line":208,"column":22}},"type":"cond-expr","locations":[{"start":{"line":203,"column":18},"end":{"line":207,"column":17}},{"start":{"line":208,"column":18},"end":{"line":208,"column":22}}],"line":202},"11":{"loc":{"start":{"line":213,"column":4},"end":{"line":215,"column":5}},"type":"if","locations":[{"start":{"line":213,"column":4},"end":{"line":215,"column":5}},{"start":{"line":213,"column":4},"end":{"line":215,"column":5}}],"line":213},"12":{"loc":{"start":{"line":216,"column":11},"end":{"line":216,"column":67}},"type":"cond-expr","locations":[{"start":{"line":216,"column":19},"end":{"line":216,"column":59}},{"start":{"line":216,"column":62},"end":{"line":216,"column":67}}],"line":216},"13":{"loc":{"start":{"line":220,"column":4},"end":{"line":222,"column":5}},"type":"if","locations":[{"start":{"line":220,"column":4},"end":{"line":222,"column":5}},{"start":{"line":220,"column":4},"end":{"line":222,"column":5}}],"line":220},"14":{"loc":{"start":{"line":223,"column":4},"end":{"line":224,"column":20}},"type":"if","locations":[{"start":{"line":223,"column":4},"end":{"line":224,"column":20}},{"start":{"line":223,"column":4},"end":{"line":224,"column":20}}],"line":223},"15":{"loc":{"start":{"line":225,"column":11},"end":{"line":225,"column":67}},"type":"cond-expr","locations":[{"start":{"line":225,"column":19},"end":{"line":225,"column":59}},{"start":{"line":225,"column":62},"end":{"line":225,"column":67}}],"line":225},"16":{"loc":{"start":{"line":229,"column":4},"end":{"line":234,"column":5}},"type":"if","locations":[{"start":{"line":229,"column":4},"end":{"line":234,"column":5}},{"start":{"line":229,"column":4},"end":{"line":234,"column":5}}],"line":229},"17":{"loc":{"start":{"line":229,"column":8},"end":{"line":229,"column":76}},"type":"binary-expr","locations":[{"start":{"line":229,"column":8},"end":{"line":229,"column":46}},{"start":{"line":229,"column":50},"end":{"line":229,"column":76}}],"line":229},"18":{"loc":{"start":{"line":232,"column":9},"end":{"line":234,"column":5}},"type":"if","locations":[{"start":{"line":232,"column":9},"end":{"line":234,"column":5}},{"start":{"line":232,"column":9},"end":{"line":234,"column":5}}],"line":232},"19":{"loc":{"start":{"line":233,"column":15},"end":{"line":233,"column":45}},"type":"cond-expr","locations":[{"start":{"line":233,"column":32},"end":{"line":233,"column":37}},{"start":{"line":233,"column":40},"end":{"line":233,"column":45}}],"line":233},"20":{"loc":{"start":{"line":235,"column":11},"end":{"line":235,"column":77}},"type":"cond-expr","locations":[{"start":{"line":235,"column":19},"end":{"line":235,"column":70}},{"start":{"line":235,"column":73},"end":{"line":235,"column":77}}],"line":235},"21":{"loc":{"start":{"line":239,"column":4},"end":{"line":244,"column":5}},"type":"if","locations":[{"start":{"line":239,"column":4},"end":{"line":244,"column":5}},{"start":{"line":239,"column":4},"end":{"line":244,"column":5}}],"line":239},"22":{"loc":{"start":{"line":239,"column":8},"end":{"line":239,"column":76}},"type":"binary-expr","locations":[{"start":{"line":239,"column":8},"end":{"line":239,"column":46}},{"start":{"line":239,"column":50},"end":{"line":239,"column":76}}],"line":239},"23":{"loc":{"start":{"line":242,"column":9},"end":{"line":244,"column":5}},"type":"if","locations":[{"start":{"line":242,"column":9},"end":{"line":244,"column":5}},{"start":{"line":242,"column":9},"end":{"line":244,"column":5}}],"line":242},"24":{"loc":{"start":{"line":243,"column":15},"end":{"line":243,"column":45}},"type":"cond-expr","locations":[{"start":{"line":243,"column":32},"end":{"line":243,"column":37}},{"start":{"line":243,"column":40},"end":{"line":243,"column":45}}],"line":243},"25":{"loc":{"start":{"line":245,"column":11},"end":{"line":245,"column":78}},"type":"cond-expr","locations":[{"start":{"line":245,"column":19},"end":{"line":245,"column":70}},{"start":{"line":245,"column":73},"end":{"line":245,"column":78}}],"line":245}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":19,"10":19,"11":19,"12":19,"13":0,"14":19,"15":1,"16":43,"17":43,"18":44,"19":43,"20":43,"21":43,"22":43,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":55,"30":4,"31":20,"32":0,"33":0,"34":8,"35":20,"36":4,"37":10,"38":4,"39":10,"40":4,"41":10,"42":4,"43":10,"44":1,"45":4,"46":0,"47":0,"48":0,"49":20,"50":20,"51":0,"52":20,"53":10,"54":19,"55":19,"56":0,"57":40,"58":20,"59":50,"60":4,"61":10,"62":4,"63":10,"64":4,"65":11,"66":11,"67":16,"68":16,"69":16,"70":1,"71":16,"72":1,"73":15,"74":32,"75":32,"76":28,"77":0,"78":28,"79":1,"80":145,"81":0,"82":145,"83":6,"84":139,"85":1,"86":102,"87":0,"88":102,"89":8,"90":94,"91":1,"92":183,"93":0,"94":183,"95":20,"96":163,"97":1},"f":{"0":1,"1":19,"2":19,"3":43,"4":44,"5":0,"6":0,"7":0,"8":0,"9":0,"10":55,"11":4,"12":20,"13":0,"14":0,"15":8,"16":20,"17":4,"18":10,"19":4,"20":10,"21":4,"22":10,"23":4,"24":10,"25":4,"26":0,"27":0,"28":0,"29":20,"30":10,"31":19,"32":40,"33":20,"34":50,"35":4,"36":10,"37":4,"38":10,"39":4,"40":11,"41":16,"42":32,"43":28,"44":145,"45":102,"46":183},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[19,0],"4":[0,19],"5":[43,0],"6":[19,0],"7":[11,0],"8":[1,15],"9":[1,15],"10":[32,0],"11":[0,28],"12":[28,0],"13":[0,145],"14":[6,139],"15":[135,4],"16":[0,102],"17":[102,8],"18":[8,94],"19":[8,0],"20":[89,5],"21":[0,183],"22":[183,20],"23":[20,163],"24":[20,0],"25":[163,0]},"inputSourceMap":{"version":3,"file":"/home/rryter/Projects/alliance-erc725.js/src/lib/encoder.ts","sources":["/home/rryter/Projects/alliance-erc725.js/src/lib/encoder.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n    This file is part of ERC725.js.\n    ERC725.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    ERC725.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with ERC725.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file lib/encoder.ts\n * @author Robert McLeod <@robertdavid010>, Fabian Vogelsteller <fabian@lukso.network>\n * @date 2020\n */\n\n/*\n  this handles encoding and decoding as per necessary for the erc725 schema specifications\n*/\n\nimport Web3Abi from 'web3-eth-abi';\nimport {\n  hexToNumber,\n  hexToUtf8,\n  isAddress,\n  numberToHex,\n  padLeft,\n  toChecksumAddress,\n  utf8ToHex,\n} from 'web3-utils';\n\nimport { CONSTANTS } from './constants';\nimport { hashData } from './utils';\n\ninterface JSONURLData {\n  hashFunction: string;\n  url: string;\n}\n\ninterface JSONURLDataWithHash extends JSONURLData {\n  hash: string;\n  json?: never;\n}\n\ninterface JSONURLDataWithJson extends JSONURLData {\n  hash?: never;\n  json: unknown;\n}\n\ntype JSONURLDataToEncode = JSONURLDataWithHash | JSONURLDataWithJson;\n\nconst encodeDataSourceWithHash = (\n  hashType: string,\n  dataHash: string,\n  dataSource: string,\n): string => {\n  const lowerHashType = hashType.toLowerCase();\n  const hashFunction = CONSTANTS.hashFunctions.find(\n    (hashFunc) =>\n      hashFunc.name === lowerHashType || hashFunc.sig === lowerHashType,\n  );\n\n  if (!hashFunction) {\n    throw new Error(\n      'Unsupported hash type to encode hash and value: ' + hashType,\n    );\n  }\n\n  // NOTE: QUESTION: Do we need 'toHex', in case future algorithms do not output hex as keccak does?\n  return (\n    hashFunction.sig +\n    dataHash.replace('0x', '') +\n    utf8ToHex(dataSource).replace('0x', '')\n  );\n};\n\nconst decodeDataSourceWithHash = (\n  value: string,\n): { hashFunction: string; dataHash: string; dataSource: string } | null => {\n  const hashFunctionSig = value.substr(0, 10);\n  const hashFunction = CONSTANTS.hashFunctions.find(\n    (e) => e.sig === hashFunctionSig,\n  );\n  const encodedData = value.replace('0x', '').substr(8); // Rest of data string after function hash\n  const dataHash = '0x' + encodedData.substr(0, 64); // Get jsonHash 32 bytes\n  const dataSource = hexToUtf8('0x' + encodedData.substr(64)); // Get remainder as URI\n  return hashFunction\n    ? { hashFunction: hashFunction.name, dataHash, dataSource }\n    : null;\n};\n\nconst valueTypeEncodingMap = {\n  string: {\n    // @ts-ignore\n    encode: (value) => Web3Abi.encodeParameter('string', value),\n    // @ts-ignore\n    decode: (value) => Web3Abi.decodeParameter('string', value),\n  },\n  address: {\n    // @ts-ignore\n    encode: (value) => Web3Abi.encodeParameter('address', value),\n    // @ts-ignore\n    decode: (value) => Web3Abi.decodeParameter('address', value),\n  },\n  // NOTE: We could add conditional handling of numeric values here...\n  uint256: {\n    // @ts-ignore\n    encode: (value) => Web3Abi.encodeParameter('uint256', value),\n    // @ts-ignore\n    decode: (value) => Web3Abi.decodeParameter('uint256', value),\n  },\n  bytes32: {\n    // @ts-ignore\n    encode: (value) => Web3Abi.encodeParameter('bytes32', value),\n    // @ts-ignore\n    decode: (value) => Web3Abi.decodeParameter('bytes32', value),\n  },\n  bytes: {\n    // @ts-ignore\n    encode: (value) => Web3Abi.encodeParameter('bytes', value),\n    // @ts-ignore\n    decode: (value) => Web3Abi.decodeParameter('bytes', value),\n  },\n  'string[]': {\n    // @ts-ignore\n    encode: (value) => Web3Abi.encodeParameter('string[]', value),\n    // @ts-ignore\n    decode: (value) => Web3Abi.decodeParameter('string[]', value),\n  },\n  'address[]': {\n    // @ts-ignore\n    encode: (value) => Web3Abi.encodeParameter('address[]', value),\n    // @ts-ignore\n    decode: (value) => Web3Abi.decodeParameter('address[]', value),\n  },\n  'uint256[]': {\n    // @ts-ignore\n    encode: (value) => Web3Abi.encodeParameter('uint256[]', value),\n    // @ts-ignore\n    decode: (value) => Web3Abi.decodeParameter('uint256[]', value),\n  },\n  'bytes32[]': {\n    // @ts-ignore\n    encode: (value) => Web3Abi.encodeParameter('bytes32[]', value),\n    // @ts-ignore\n    decode: (value) => Web3Abi.decodeParameter('bytes32[]', value),\n  },\n  'bytes[]': {\n    // @ts-ignore\n    encode: (value) => Web3Abi.encodeParameter('bytes[]', value),\n    // @ts-ignore\n    decode: (value) => Web3Abi.decodeParameter('bytes[]', value),\n  },\n};\n\n// Use enum for type bellow\n// Is it this enum Erc725SchemaValueType? (If so, custom is missing from enum)\nexport const valueContentEncodingMap = {\n  Keccak256: {\n    type: 'bytes32',\n    encode: (value) => value,\n    decode: (value) => value,\n  },\n  // NOTE: Deprecated. For reference/testing in future\n  ArrayLength: {\n    type: 'uint256',\n    encode: (value) => padLeft(numberToHex(value), 64),\n    decode: (value) => hexToNumber(value),\n  },\n  Number: {\n    type: 'uint256',\n    // NOTE; extra logic is to handle and always return a string number\n    encode: (value) => {\n      // eslint-disable-next-line no-param-reassign\n      try {\n        // eslint-disable-next-line no-param-reassign\n        value = parseInt(value, 10);\n      } catch (error) {\n        throw new Error(error);\n      }\n\n      return padLeft(numberToHex(value), 64);\n    },\n    decode: (value) => '' + hexToNumber(value),\n  },\n  // NOTE: This is not symmetrical, and always returns a checksummed address\n  Address: {\n    type: 'address',\n    encode: (value) => {\n      if (isAddress(value)) {\n        return value.toLowerCase();\n      }\n\n      throw new Error('Address: \"' + value + '\" is an invalid address.');\n    },\n    decode: (value) => toChecksumAddress(value),\n  },\n  String: {\n    type: 'string',\n    encode: (value) => utf8ToHex(value),\n    decode: (value) => hexToUtf8(value),\n  },\n  Markdown: {\n    type: 'string',\n    encode: (value) => utf8ToHex(value),\n    decode: (value) => hexToUtf8(value),\n  },\n  URL: {\n    type: 'string',\n    encode: (value) => utf8ToHex(value),\n    decode: (value) => hexToUtf8(value),\n  },\n  AssetURL: {\n    type: 'custom',\n    encode: (value) =>\n      encodeDataSourceWithHash(value.hashFunction, value.hash, value.url),\n    decode: (value) => {\n      const result = decodeDataSourceWithHash(value);\n      return result\n        ? {\n            hashFunction: result.hashFunction,\n            hash: result.dataHash,\n            url: result.dataSource,\n          }\n        : null;\n    },\n  },\n  JSONURL: {\n    type: 'custom',\n    // eslint-disable-next-line arrow-body-style\n    encode: (value: JSONURLDataToEncode) => {\n      const { hash, json, hashFunction, url } = value;\n\n      let hashedJson = hash;\n\n      if (json) {\n        hashedJson = hashData(json, hashFunction);\n      }\n\n      if (!hashedJson) {\n        throw new Error(\n          'You have to provide either the hash or the json via the respective properties',\n        );\n      }\n\n      return encodeDataSourceWithHash(hashFunction, hashedJson, url);\n    },\n    decode: (value) => {\n      const result = decodeDataSourceWithHash(value);\n      return result\n        ? {\n            hashFunction: result.hashFunction,\n            hash: result.dataHash,\n            url: result.dataSource,\n          }\n        : null;\n    },\n  },\n};\n\nexport function encodeValueType(type: string, value: string): string {\n  if (!valueTypeEncodingMap[type]) {\n    throw new Error('Could not encode valueType: \"' + type + '\".');\n  }\n\n  return value ? valueTypeEncodingMap[type].encode(value) : value;\n}\n\nexport function decodeValueType(type: string, value: string) {\n  if (!valueTypeEncodingMap[type]) {\n    throw new Error('Could not decode valueType: \"' + type + '\".');\n  }\n\n  if (value === '0x') return null;\n\n  return value ? valueTypeEncodingMap[type].decode(value) : value;\n}\n\nexport function encodeValueContent(\n  type: string,\n  value: string,\n): string | false {\n  if (!valueContentEncodingMap[type] && type.substr(0, 2) !== '0x') {\n    throw new Error('Could not encode valueContent: \"' + type + '\".');\n  } else if (type.substr(0, 2) === '0x') {\n    return type === value ? value : false;\n  }\n\n  return value ? valueContentEncodingMap[type].encode(value) : '0x';\n}\n\nexport function decodeValueContent(\n  type: string,\n  value: string,\n): string | false {\n  if (!valueContentEncodingMap[type] && type.substr(0, 2) !== '0x') {\n    throw new Error('Could not decode valueContent: \"' + type + '\".');\n  } else if (type.substr(0, 2) === '0x') {\n    return type === value ? value : false;\n  }\n\n  return value ? valueContentEncodingMap[type].decode(value) : value;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"eb6f52293eb373b1e7942121735760477946b789","contentHash":"38859a90b77165786dd277e6f6b69018dc8d8e88aa1b4f260a0f617674139ef7"}}